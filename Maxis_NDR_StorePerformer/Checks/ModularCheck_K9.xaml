<Activity mc:Ignorable="sap sap2010" x:Class="ModularCheck_K9" this:ModularCheck_K9.vXMLFilePath="[&quot;&quot;]" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:ss="clr-namespace:System.Security;assembly=mscorlib" xmlns:sxl="clr-namespace:System.Xml.Linq;assembly=System.Xml.Linq" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_ConfigXLS" Type="InArgument(scg:Dictionary(x:String, x:String))" />
    <x:Property Name="vPlaceholder" Type="InOutArgument(x:String)" />
    <x:Property Name="vCanProceed" Type="OutArgument(x:String)" />
    <x:Property Name="vHasError" Type="OutArgument(x:String)" />
    <x:Property Name="vMessage" Type="OutArgument(x:String)" />
    <x:Property Name="vHasSystemError" Type="OutArgument(x:String)" />
    <x:Property Name="vSystemMessage" Type="OutArgument(x:String)" />
    <x:Property Name="vXMLFilePath" Type="InArgument(x:String)" />
    <x:Property Name="vMaxisCredDic" Type="InArgument(scg:Dictionary(x:String, scg:Dictionary(x:String, ss:SecureString)))" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>3056,15280</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="76">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Database.Activities</x:String>
      <x:String>UiPath.Database</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.CSV</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>UiPath.CSV.Activities</x:String>
      <x:String>UiPath.Mail.Activities</x:String>
      <x:String>UiPath.Mail.Exchange.Activities</x:String>
      <x:String>UiPath.Mail.IMAP.Activities</x:String>
      <x:String>UiPath.Mail.Outlook.Activities</x:String>
      <x:String>UiPath.Mail.POP3.Activities</x:String>
      <x:String>UiPath.Mail.SMTP.Activities</x:String>
      <x:String>UiPath.Orchestrator.Client</x:String>
      <x:String>UiPath.Orchestrator.Client.Models</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>UiPath.Web.Activities</x:String>
      <x:String>UiPath.JSON.Activities</x:String>
      <x:String>UiPath.REST.Activities</x:String>
      <x:String>UiPath.SOAP.Activities</x:String>
      <x:String>UiPath.XML.Activities</x:String>
      <x:String>UiPath.Web</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="54">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>system</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Plugin.Workflow</AssemblyReference>
      <AssemblyReference>UiPath.Database.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Database</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OrchestratorClient</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Web.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Web</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <sap:WorkflowViewStateService.ViewState>
    <scg:Dictionary x:TypeArguments="x:String, x:Object">
      <x:Boolean x:Key="ShouldExpandAll">True</x:Boolean>
    </scg:Dictionary>
  </sap:WorkflowViewStateService.ViewState>
  <Sequence sap:VirtualizedContainerService.HintSize="3036,15220" sap2010:WorkflowViewState.IdRef="Sequence_34">
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="2994.4,15127.2" sap2010:WorkflowViewState.IdRef="TryCatch_3">
      <TryCatch.Try>
        <Sequence sap:VirtualizedContainerService.HintSize="2957.6,14688" sap2010:WorkflowViewState.IdRef="Sequence_33">
          <Sequence.Variables>
            <Variable x:TypeArguments="x:String" Default="[&quot;&quot;]" Name="vMSISDN" />
            <Variable x:TypeArguments="x:String" Default="[&quot;&quot;]" Name="vUOMDesc" />
            <Variable x:TypeArguments="x:String" Default="[&quot;&quot;]" Name="vFullMarketCode" />
            <Variable x:TypeArguments="x:String" Default="[&quot;&quot;]" Name="vHasResults" />
            <Variable x:TypeArguments="x:String" Default="[&quot;&quot;]" Name="vContractDuration" />
            <Variable x:TypeArguments="x:String" Default="[&quot;&quot;]" Name="vContractRemainingDuration" />
            <Variable x:TypeArguments="x:String" Default="[&quot;&quot;]" Name="vContractPenalty" />
            <Variable x:TypeArguments="x:Int32" Default="[]" Name="vTotalResults" />
            <Variable x:TypeArguments="x:String" Default="[&quot;&quot;]" Name="vTotalRowCount" />
            <Variable x:TypeArguments="x:String" Default="[&quot;&quot;]" Name="vTenure" />
            <Variable x:TypeArguments="x:String" Default="[&quot;&quot;]" Name="vYtdDate" />
            <Variable x:TypeArguments="x:String" Default="[&quot;&quot;]" Name="vComponentID" />
            <Variable x:TypeArguments="x:String" Default="[&quot;&quot;]" Name="vComponentType" />
            <Variable x:TypeArguments="x:String" Default="[&quot;&quot;]" Name="vContractStartDate" />
            <Variable x:TypeArguments="x:String" Default="[&quot;&quot;]" Name="vUOMMappingFilePath" />
            <Variable x:TypeArguments="x:String" Default="[&quot;&quot;]" Name="vTaskname" />
            <Variable x:TypeArguments="x:String" Default="[&quot;&quot;]" Name="vUOMSheetName" />
            <Variable x:TypeArguments="x:String" Default="[&quot;&quot;]" Name="vPlaceholder" />
            <Variable x:TypeArguments="x:String" Default="[&quot;&quot;]" Name="vTableHeader" />
            <Variable x:TypeArguments="ui:Image" Name="screenshotImage" />
            <Variable x:TypeArguments="x:String" Name="processStatus" />
            <Variable x:TypeArguments="x:String" Default="[&quot;&quot;]" Name="CurrentTaskName" />
          </Sequence.Variables>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="2916,130.4" sap2010:WorkflowViewState.IdRef="MultipleAssign_2">
            <ui:MultipleAssign.AssignOperations>
              <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_3">
                  <ui:AssignOperation.To>
                    <OutArgument x:TypeArguments="x:String">[vUOMMappingFilePath]</OutArgument>
                  </ui:AssignOperation.To>
                  <ui:AssignOperation.Value>
                    <InArgument x:TypeArguments="x:String">[in_ConfigXLS("vUOMMappingFilePath")]</InArgument>
                  </ui:AssignOperation.Value>
                </ui:AssignOperation>
                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_4">
                  <ui:AssignOperation.To>
                    <OutArgument x:TypeArguments="x:String">[vUOMSheetName]</OutArgument>
                  </ui:AssignOperation.To>
                  <ui:AssignOperation.Value>
                    <InArgument x:TypeArguments="x:String">[in_ConfigXLS("vUOMSheetName")]</InArgument>
                  </ui:AssignOperation.Value>
                </ui:AssignOperation>
              </scg:List>
            </ui:MultipleAssign.AssignOperations>
          </ui:MultipleAssign>
          <ui:Comment sap:VirtualizedContainerService.HintSize="2916,56" sap2010:WorkflowViewState.IdRef="Comment_3" Text="----------------------&#xA;Initialise variables" />
          <If sap2010:Annotation.AnnotationText="If $vPlaceholder$ Not Equal To (&lt;&gt;) &quot;&quot; Then  " Condition="[vPlaceholder &lt;&gt; &quot;&quot;]" sap:VirtualizedContainerService.HintSize="2916,264.8" sap2010:WorkflowViewState.IdRef="If_1">
            <If.Then>
              <Sequence sap:VirtualizedContainerService.HintSize="241.6,115.2" sap2010:WorkflowViewState.IdRef="Sequence_1">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Throw DisplayName="Throw StopWorkflow" Exception="[New NotImplementedException(&quot;StopWorkflow&quot;)]" sap:VirtualizedContainerService.HintSize="200,22.4" sap2010:WorkflowViewState.IdRef="Throw_1" />
              </Sequence>
            </If.Then>
          </If>
          <Assign sap:VirtualizedContainerService.HintSize="2916,60" sap2010:WorkflowViewState.IdRef="Assign_47">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[vTaskname]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">["ModularCheck_K9"]</InArgument>
            </Assign.Value>
          </Assign>
          <Assign sap2010:Annotation.AnnotationText="Variable Operation: false To $vHasSystemError$" sap:VirtualizedContainerService.HintSize="2916,60" sap2010:WorkflowViewState.IdRef="Assign_1">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[vHasSystemError]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">false</InArgument>
            </Assign.Value>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </Assign>
          <Assign sap2010:Annotation.AnnotationText="Variable Operation:  To $vSystemMessage$" sap:VirtualizedContainerService.HintSize="2916,60" sap2010:WorkflowViewState.IdRef="Assign_2">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[vSystemMessage]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">
                <Literal x:TypeArguments="x:String" Value="" />
              </InArgument>
            </Assign.Value>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </Assign>
          <Assign sap2010:Annotation.AnnotationText="Variable Operation: false To $vHasError$" sap:VirtualizedContainerService.HintSize="2916,60" sap2010:WorkflowViewState.IdRef="Assign_3">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[vHasError]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">false</InArgument>
            </Assign.Value>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </Assign>
          <Assign sap2010:Annotation.AnnotationText="Variable Operation:  To $vMessage$" sap:VirtualizedContainerService.HintSize="2916,60" sap2010:WorkflowViewState.IdRef="Assign_4">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[vMessage]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">
                <Literal x:TypeArguments="x:String" Value="" />
              </InArgument>
            </Assign.Value>
          </Assign>
          <Assign sap2010:Annotation.AnnotationText="Variable Operation: true To $vCanProceed$" sap:VirtualizedContainerService.HintSize="2916,60" sap2010:WorkflowViewState.IdRef="Assign_5">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[vCanProceed]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">true</InArgument>
            </Assign.Value>
          </Assign>
          <TryCatch sap2010:Annotation.AnnotationText="Begin Error Handling; Action: Continue; Options: Variable Assignment,  Task Status: Pass" sap:VirtualizedContainerService.HintSize="2916,13424" sap2010:WorkflowViewState.IdRef="TryCatch_2">
            <TryCatch.Try>
              <Sequence sap:VirtualizedContainerService.HintSize="2879.2,12448.8" sap2010:WorkflowViewState.IdRef="Sequence_29">
                <Sequence.Variables>
                  <Variable x:TypeArguments="scg:Dictionary(x:String, x:String)" Default="[New Dictionary(Of String, String)]" Name="XMLSessionFileName" />
                  <Variable x:TypeArguments="x:String" Name="XMLFileContent" />
                  <Variable x:TypeArguments="sxl:XDocument" Name="XMLDocumentVar" />
                  <Variable x:TypeArguments="scg:Dictionary(x:String, sxl:XDocument)" Default="[New Dictionary(Of String, XDocument)]" Name="XMLSessionXDocument" />
                  <Variable x:TypeArguments="x:Object" Name="XMLNodeContent" />
                  <Variable x:TypeArguments="ui:DatabaseConnection" Name="DefaultConnection" />
                  <Variable x:TypeArguments="sd:DataTable" Name="DefaultSQLDataSet" />
                  <Variable x:TypeArguments="x:String" Name="vStringDefaultData" />
                </Sequence.Variables>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:Comment sap:VirtualizedContainerService.HintSize="2837.6,76" sap2010:WorkflowViewState.IdRef="Comment_5" Text="----------------------&#xA;Get MSISDN, Ytd Date, UOM Desc, Full Market Code" />
                <Assign sap2010:Annotation.AnnotationText="XML : Start XML Session using existing file &quot;$vXMLFilePath$&quot; Session:Default" sap:VirtualizedContainerService.HintSize="2837.6,60" sap2010:WorkflowViewState.IdRef="Assign_6">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[XMLSessionFileName("Default")]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[vXMLFilePath]</InArgument>
                  </Assign.Value>
                </Assign>
                <ui:ReadTextFile sap2010:Annotation.AnnotationText="XML : Start XML Session using existing file &quot;$vXMLFilePath$&quot; Session:Default" Content="[XMLFileContent]" FileName="[vXMLFilePath]" sap:VirtualizedContainerService.HintSize="2837.6,134.4" sap2010:WorkflowViewState.IdRef="ReadTextFile_1" />
                <ui:DeserializeXml sap2010:Annotation.AnnotationText="XML : Start XML Session using existing file &quot;$vXMLFilePath$&quot; Session:Default" sap:VirtualizedContainerService.HintSize="2837.6,60" sap2010:WorkflowViewState.IdRef="DeserializeXml_1" XMLDocument="[XMLDocumentVar]" XMLString="[XMLFileContent]">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:DeserializeXml>
                <Assign sap2010:Annotation.AnnotationText="XML : Start XML Session using existing file &quot;$vXMLFilePath$&quot; Session:Default" sap:VirtualizedContainerService.HintSize="2837.6,60" sap2010:WorkflowViewState.IdRef="Assign_7">
                  <Assign.To>
                    <OutArgument x:TypeArguments="sxl:XDocument">[XMLSessionXDocument("Default")]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="sxl:XDocument">[XMLDocumentVar]</InArgument>
                  </Assign.Value>
                </Assign>
                <ui:ExecuteXPath XMLString="{x:Null}" sap2010:Annotation.AnnotationText="XML : Get Single Node value from XPath location &quot;/info/MSISDN&quot; and assign to variable &quot;$vMSISDN$&quot;. Session:Default" ExistingXML="[XMLSessionXDocument(&quot;Default&quot;)]" sap:VirtualizedContainerService.HintSize="2837.6,88" sap2010:WorkflowViewState.IdRef="ExecuteXPath_1" Result="[XMLNodeContent]" XPathExpression="string(/info/MSISDN/text())" />
                <Assign sap2010:Annotation.AnnotationText="XML : Get Single Node value from XPath location &quot;/info/MSISDN&quot; and assign to variable &quot;$vMSISDN$&quot;. Session:Default" sap:VirtualizedContainerService.HintSize="2837.6,60" sap2010:WorkflowViewState.IdRef="Assign_8">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[vMSISDN]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[XMLNodeContent.ToString()]</InArgument>
                  </Assign.Value>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </Assign>
                <ui:ExecuteXPath XMLString="{x:Null}" sap2010:Annotation.AnnotationText="XML : Get Single Node value from XPath location &quot;/info/YtdDate&quot; and assign to variable &quot;$vYtdDate$&quot;. Session:Default" ExistingXML="[XMLSessionXDocument(&quot;Default&quot;)]" sap:VirtualizedContainerService.HintSize="2837.6,88" sap2010:WorkflowViewState.IdRef="ExecuteXPath_2" Result="[XMLNodeContent]" XPathExpression="string(/info/YtdDate/text())" />
                <Assign sap2010:Annotation.AnnotationText="XML : Get Single Node value from XPath location &quot;/info/YtdDate&quot; and assign to variable &quot;$vYtdDate$&quot;. Session:Default" sap:VirtualizedContainerService.HintSize="2837.6,60" sap2010:WorkflowViewState.IdRef="Assign_9">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[vYtdDate]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[XMLNodeContent.ToString()]</InArgument>
                  </Assign.Value>
                </Assign>
                <ui:ExecuteXPath XMLString="{x:Null}" sap2010:Annotation.AnnotationText="XML : Get Single Node value from XPath location &quot;/info/UOMDesc&quot; and assign to variable &quot;$vUOMDesc$&quot;. Session:Default" ExistingXML="[XMLSessionXDocument(&quot;Default&quot;)]" sap:VirtualizedContainerService.HintSize="2837.6,88" sap2010:WorkflowViewState.IdRef="ExecuteXPath_3" Result="[XMLNodeContent]" XPathExpression="string(/info/UOMDesc/text())" />
                <Assign sap2010:Annotation.AnnotationText="XML : Get Single Node value from XPath location &quot;/info/UOMDesc&quot; and assign to variable &quot;$vUOMDesc$&quot;. Session:Default" sap:VirtualizedContainerService.HintSize="2837.6,60" sap2010:WorkflowViewState.IdRef="Assign_10">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[vUOMDesc]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[XMLNodeContent.ToString()]</InArgument>
                  </Assign.Value>
                </Assign>
                <ui:ExecuteXPath XMLString="{x:Null}" sap2010:Annotation.AnnotationText="XML : Get Single Node value from XPath location &quot;/info/FullMarketCode&quot; and assign to variable &quot;$vFullMarketCode$&quot;. Session:Default" ExistingXML="[XMLSessionXDocument(&quot;Default&quot;)]" sap:VirtualizedContainerService.HintSize="2837.6,88" sap2010:WorkflowViewState.IdRef="ExecuteXPath_4" Result="[XMLNodeContent]" XPathExpression="string(/info/FullMarketCode/text())" />
                <Assign sap2010:Annotation.AnnotationText="XML : Get Single Node value from XPath location &quot;/info/FullMarketCode&quot; and assign to variable &quot;$vFullMarketCode$&quot;. Session:Default" sap:VirtualizedContainerService.HintSize="2837.6,60" sap2010:WorkflowViewState.IdRef="Assign_11">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[vFullMarketCode]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[XMLNodeContent.ToString()]</InArgument>
                  </Assign.Value>
                </Assign>
                <ui:Comment sap:VirtualizedContainerService.HintSize="2837.6,76" sap2010:WorkflowViewState.IdRef="Comment_6" Text="----------------------&#xA;Conver market code to upper case and convert ytd date to iSell format" />
                <Assign sap:VirtualizedContainerService.HintSize="2837.6,60" sap2010:WorkflowViewState.IdRef="Assign_48">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[vFullMarketCode]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[vFullMarketCode.ToUpper]</InArgument>
                  </Assign.Value>
                </Assign>
                <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Run Logic &quot;FormatStringWithDateTime&quot; from MetaBot &quot;My MetaBots\Bot Store\Utility_DateTime.mbot&quot;" sap:VirtualizedContainerService.HintSize="2837.6,88" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="Library\Bot Store\Utility_DateTime\Format_String_With_Date_time.xaml">
                  <ui:InvokeWorkflowFile.Arguments>
                    <InOutArgument x:TypeArguments="x:String" x:Key="vStr">[vYtdDate]</InOutArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="vFormat">["yyyy-MM-dd"]</InArgument>
                  </ui:InvokeWorkflowFile.Arguments>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:InvokeWorkflowFile>
                <ui:Comment sap:VirtualizedContainerService.HintSize="2837.6,95.2" sap2010:WorkflowViewState.IdRef="Comment_8" Text="----------------------&#xA;Read UOM mapping file into SQL and query total results found based on UOM Desc and market code" />
                <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="2837.6,62.4" sap2010:WorkflowViewState.IdRef="WriteLine_1" Text="[&quot;For NDR_ModularCheck_K9 - Check UOM Mapping File Path: &quot; + vUOMMappingFilePath]" />
                <ui:DatabaseConnect sap2010:Annotation.AnnotationText="Connect to &quot;DBQ=$vUOMMappingFilePath$;Driver={Driver do Microsoft Excel(*.xls)};ReadOnly=1;Threads=3;UserCommitSync=Yes;HDR=Yes;&quot; Session:'Default'" DatabaseConnection="[DefaultConnection]" sap:VirtualizedContainerService.HintSize="2837.6,60" sap2010:WorkflowViewState.IdRef="DatabaseConnect_1" ProviderName="System.Data.Odbc" ConnectionString="[&quot;DBQ=&quot;+vUOMMappingFilePath+&quot;;Driver={Driver do Microsoft Excel(*.xls)};ReadOnly=1;Threads=3;UserCommitSync=Yes;HDR=Yes;&quot;]">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:DatabaseConnect>
                <ui:ExecuteQuery ContinueOnError="{x:Null}" TimeoutMS="{x:Null}" sap2010:Annotation.AnnotationText="Execute SQL Statement: 'SELECT COUNT(*) FROM [$vUOMSheetName$$] WHERE [UOM Desc] = '$vUOMDesc$' AND [Market Code Desc] = '$vFullMarketCode$'' Session:'Default'" CommandType="Text" DataTable="[DefaultSQLDataSet]" ExistingDbConnection="[DefaultConnection]" sap:VirtualizedContainerService.HintSize="2837.6,89.6" sap2010:WorkflowViewState.IdRef="ExecuteQuery_1" Sql="[&quot;SELECT COUNT(*) FROM [&quot;+vUOMSheetName+&quot;$] WHERE [UOM Desc] = '&quot;+vUOMDesc+&quot;' AND [Market Code Desc] = '&quot;+vFullMarketCode+&quot;'&quot;]">
                  <ui:ExecuteQuery.Parameters>
                    <scg:Dictionary x:TypeArguments="x:String, Argument" />
                  </ui:ExecuteQuery.Parameters>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:ExecuteQuery>
                <ui:OutputDataTable DataTable="[DefaultSQLDataSet]" DisplayName="Output Data Table" sap:VirtualizedContainerService.HintSize="2837.6,22.4" sap2010:WorkflowViewState.IdRef="OutputDataTable_1" Text="[vStringDefaultData]" />
                <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="2837.6,62.4" sap2010:WorkflowViewState.IdRef="WriteLine_2" Text="[&quot;For ModularCheck_K9 - Check Default SQL Data: &quot; + vStringDefaultData]" />
                <Assign sap2010:Annotation.AnnotationText="Variable Operation: false To $vHasResults$" sap:VirtualizedContainerService.HintSize="2837.6,60" sap2010:WorkflowViewState.IdRef="Assign_12">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[vHasResults]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">false</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign sap2010:Annotation.AnnotationText="Variable Operation:  To $vTotalResults$" sap:VirtualizedContainerService.HintSize="2837.6,60" sap2010:WorkflowViewState.IdRef="Assign_13">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Int32">[vTotalResults]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Int32">[]</InArgument>
                  </Assign.Value>
                </Assign>
                <ui:ForEachRow CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="Start Loop &quot;Each row in SQL Data Set Session: Default&quot;" DataTable="[DefaultSQLDataSet]" sap:VirtualizedContainerService.HintSize="2837.6,401.6" sap2010:WorkflowViewState.IdRef="ForEachRow_1">
                  <ui:ForEachRow.Body>
                    <ActivityAction x:TypeArguments="sd:DataRow">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="sd:DataRow" Name="item" />
                      </ActivityAction.Argument>
                      <Sequence sap:VirtualizedContainerService.HintSize="304,252.8" sap2010:WorkflowViewState.IdRef="Sequence_2">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Assign sap2010:Annotation.AnnotationText="Variable Operation: $Dataset Column(1)$ To $vTotalResults$" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_14">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Int32">[vTotalResults]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Int32">[CInt(item(0))]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap2010:Annotation.AnnotationText="Variable Operation: true To $vHasResults$" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_15">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[vHasResults]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">true</InArgument>
                          </Assign.Value>
                        </Assign>
                      </Sequence>
                    </ActivityAction>
                  </ui:ForEachRow.Body>
                </ui:ForEachRow>
                <ui:Comment sap:VirtualizedContainerService.HintSize="2837.6,56" sap2010:WorkflowViewState.IdRef="Comment_9" Text="----------------------&#xA;Do not proceed if &gt; 1 result is found" />
                <If sap2010:Annotation.AnnotationText="If $vTotalResults$ Greater than(&gt;) &quot;1&quot; Then  " Condition="[vTotalResults &gt; 1]" sap:VirtualizedContainerService.HintSize="2837.6,564.8" sap2010:WorkflowViewState.IdRef="If_2">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If.Then>
                    <Sequence sap:VirtualizedContainerService.HintSize="304,415.2" sap2010:WorkflowViewState.IdRef="Sequence_3">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Assign sap2010:Annotation.AnnotationText="Variable Operation: true To $vHasError$" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_16">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[vHasError]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">true</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign sap2010:Annotation.AnnotationText="Variable Operation: true To $vCanProceed$" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_17">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[vCanProceed]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">true</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign sap2010:Annotation.AnnotationText="Variable Operation: [$vTaskname$]: Check failed. $Dataset Column(1)$ UOM queries found. Raise to RetailOps. To $vMessage$" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_18">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[vMessage]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">["["+vTaskname+"]: Check failed. "+vTotalResults.ToString+" UOM queries found. Raise to RetailOps."]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Throw DisplayName="Throw StopWorkflow" Exception="[New NotImplementedException(&quot;StopWorkflow&quot;)]" sap:VirtualizedContainerService.HintSize="262.4,22.4" sap2010:WorkflowViewState.IdRef="Throw_2" />
                    </Sequence>
                  </If.Then>
                </If>
                <If sap2010:Annotation.AnnotationText="If $vTotalResults$ Equal To (=) &quot;1&quot; Then  " Condition="[vTotalResults = 1]" sap:VirtualizedContainerService.HintSize="2837.6,7356" sap2010:WorkflowViewState.IdRef="If_14">
                  <If.Then>
                    <Sequence sap:VirtualizedContainerService.HintSize="2693.6,7206.4" sap2010:WorkflowViewState.IdRef="Sequence_25">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="sd:DataTable" Name="DefaultSQLDataSet" />
                      </Sequence.Variables>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:Comment sap:VirtualizedContainerService.HintSize="2652,76" sap2010:WorkflowViewState.IdRef="Comment_11" Text="----------------------&#xA;If results = 1, proceed to check if contract pushed" />
                      <ui:ExecuteQuery ContinueOnError="{x:Null}" TimeoutMS="{x:Null}" sap2010:Annotation.AnnotationText="Execute SQL Statement: 'SELECT [Tenure], [Component 1] FROM [$vUOMSheetName$$] WHERE [UOM Desc] = '$vUOMDesc$' AND [Market Code Desc] = '$vFullMarketCode$'' Session:'Default'" CommandType="Text" DataTable="[DefaultSQLDataSet]" ExistingDbConnection="[DefaultConnection]" sap:VirtualizedContainerService.HintSize="2652,89.6" sap2010:WorkflowViewState.IdRef="ExecuteQuery_2" Sql="[&quot;SELECT [Tenure], [Component 1] FROM [&quot;+vUOMSheetName+&quot;$] WHERE [UOM Desc] = '&quot;+vUOMDesc+&quot;' AND [Market Code Desc] = '&quot;+vFullMarketCode+&quot;'&quot;]">
                        <ui:ExecuteQuery.Parameters>
                          <scg:Dictionary x:TypeArguments="x:String, Argument" />
                        </ui:ExecuteQuery.Parameters>
                      </ui:ExecuteQuery>
                      <ui:ForEachRow CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="Start Loop &quot;Each row in SQL Data Set Session: Default&quot;" DataTable="[DefaultSQLDataSet]" sap:VirtualizedContainerService.HintSize="2652,401.6" sap2010:WorkflowViewState.IdRef="ForEachRow_2">
                        <ui:ForEachRow.Body>
                          <ActivityAction x:TypeArguments="sd:DataRow">
                            <ActivityAction.Argument>
                              <DelegateInArgument x:TypeArguments="sd:DataRow" Name="item" />
                            </ActivityAction.Argument>
                            <Sequence sap:VirtualizedContainerService.HintSize="304,252.8" sap2010:WorkflowViewState.IdRef="Sequence_4">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Assign sap2010:Annotation.AnnotationText="Variable Operation: $Dataset Column(Tenure)$ To $vTenure$" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_19">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[vTenure]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">[item("Tenure").ToString()]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <Assign sap2010:Annotation.AnnotationText="Variable Operation: $Dataset Column(Component 1)$ To $vComponentID$" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_20">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[vComponentID]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">[item("Component 1").ToString()]</InArgument>
                                </Assign.Value>
                              </Assign>
                            </Sequence>
                          </ActivityAction>
                        </ui:ForEachRow.Body>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:ForEachRow>
                      <If sap2010:Annotation.AnnotationText="If $vTenure$ Equal To (=) &quot;&quot; OR $vComponentID$ Equal To (=) &quot;&quot; Then" Condition="[vTenure = &quot;&quot; or vComponentID = &quot;&quot;]" sap:VirtualizedContainerService.HintSize="2652,564.8" sap2010:WorkflowViewState.IdRef="If_3">
                        <If.Then>
                          <Sequence sap:VirtualizedContainerService.HintSize="304,415.2" sap2010:WorkflowViewState.IdRef="Sequence_5">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <Assign sap2010:Annotation.AnnotationText="Variable Operation: [$vTaskname$]: Check failed. Tenure/component ID empty in UOM. Raise to RetailOps. To $vMessage$" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_21">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[vMessage]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">["["+vTaskname+"]: Check failed. Tenure/component ID empty in UOM. Raise to RetailOps."]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <Assign sap2010:Annotation.AnnotationText="Variable Operation: true To $vHasError$" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_22">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[vHasError]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">true</InArgument>
                              </Assign.Value>
                            </Assign>
                            <Assign sap2010:Annotation.AnnotationText="Variable Operation: true To $vCanProceed$" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_23">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[vCanProceed]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">true</InArgument>
                              </Assign.Value>
                            </Assign>
                            <Throw DisplayName="Throw StopWorkflow" Exception="[New NotImplementedException(&quot;StopWorkflow&quot;)]" sap:VirtualizedContainerService.HintSize="262.4,22.4" sap2010:WorkflowViewState.IdRef="Throw_3" />
                          </Sequence>
                        </If.Then>
                      </If>
                      <ui:Comment sap:VirtualizedContainerService.HintSize="2652,76" sap2010:WorkflowViewState.IdRef="Comment_13" Text="----------------------&#xA;Go to service level in Kenan and component tab" />
                      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Run Logic &quot;ClickServices&quot; from MetaBot &quot;My MetaBots\Kenan Web\KenanWeb_General.mbot&quot;" sap:VirtualizedContainerService.HintSize="2652,88" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_3" UnSafe="False" WorkflowFileName="Library\Kenan Web\KenanWeb_General\ClickServices.xaml">
                        <ui:InvokeWorkflowFile.Arguments>
                          <scg:Dictionary x:TypeArguments="x:String, Argument" />
                        </ui:InvokeWorkflowFile.Arguments>
                      </ui:InvokeWorkflowFile>
                      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File" sap:VirtualizedContainerService.HintSize="2652,88" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_14" UnSafe="False" WorkflowFileName="Library\Kenan Web\KenanWeb_CCServices\GetIdentifierbyCellIndex.xaml">
                        <ui:InvokeWorkflowFile.Arguments>
                          <InArgument x:TypeArguments="x:String" x:Key="vRowIndex">0</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="vColumnIndex">0</InArgument>
                          <OutArgument x:TypeArguments="x:String" x:Key="vCellValue">[vTableHeader]</OutArgument>
                        </ui:InvokeWorkflowFile.Arguments>
                      </ui:InvokeWorkflowFile>
                      <If sap2010:Annotation.AnnotationText="If $vTableHeader$ Includes &quot;Working Set&quot; Then  " Condition="[vTableHeader.Contains(&quot;Working&quot;)]" sap:VirtualizedContainerService.HintSize="2652,2392" sap2010:WorkflowViewState.IdRef="If_5">
                        <If.Then>
                          <Sequence sap:VirtualizedContainerService.HintSize="605.6,2242.4" sap2010:WorkflowViewState.IdRef="Sequence_10">
                            <Sequence.Variables>
                              <Variable x:TypeArguments="ui:Image" Name="screenshotImage" />
                              <Variable x:TypeArguments="x:String" Name="processStatus" />
                            </Sequence.Variables>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <TryCatch sap2010:Annotation.AnnotationText="Begin Error Handling; Action: Continue; Options: Variable Assignment,  Task Status: Pass" sap:VirtualizedContainerService.HintSize="564,1516.8" sap2010:WorkflowViewState.IdRef="TryCatch_1">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <TryCatch.Try>
                                <Sequence sap:VirtualizedContainerService.HintSize="420,283.2" sap2010:WorkflowViewState.IdRef="Sequence_6">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="378.4,62.4" sap2010:WorkflowViewState.IdRef="WriteLine_3" Text="[&quot;For ModularCheck_K9 - Check MSISDN: &quot; + vMSISDN]" />
                                  <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Run Logic &quot;ClickIdentifier&quot; from MetaBot &quot;My MetaBots\Kenan Web\KenanWeb_CCServices.mbot&quot;" sap:VirtualizedContainerService.HintSize="378.4,88" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_4" UnSafe="False" WorkflowFileName="Library\Kenan Web\KenanWeb_CCServices\ClickIdentifier.xaml">
                                    <ui:InvokeWorkflowFile.Arguments>
                                      <InArgument x:TypeArguments="x:String" x:Key="vServiceId">[vMSISDN]</InArgument>
                                    </ui:InvokeWorkflowFile.Arguments>
                                  </ui:InvokeWorkflowFile>
                                </Sequence>
                              </TryCatch.Try>
                              <TryCatch.Catches>
                                <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="483.2,920.8" sap2010:WorkflowViewState.IdRef="Catch`1_1">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ActivityAction x:TypeArguments="s:Exception">
                                    <ActivityAction.Argument>
                                      <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                    </ActivityAction.Argument>
                                    <Sequence sap:VirtualizedContainerService.HintSize="476.8,850.4" sap2010:WorkflowViewState.IdRef="Sequence_8">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <Assign sap:VirtualizedContainerService.HintSize="435.2,60" sap2010:WorkflowViewState.IdRef="Assign_24">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:String">[vHasError]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:String">true</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <Assign sap:VirtualizedContainerService.HintSize="435.2,60" sap2010:WorkflowViewState.IdRef="Assign_25">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:String">[processStatus]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:String">Failed</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <ui:LogMessage sap:VirtualizedContainerService.HintSize="435.2,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;Process Status: Failed. Exception: &quot;+exception.Message]" />
                                      <ui:Comment sap:VirtualizedContainerService.HintSize="435.2,95.2" sap2010:WorkflowViewState.IdRef="Comment_15" Text="When working with Orchestrator transactions, the following activity can be used." />
                                      <ui:CommentOut sap:VirtualizedContainerService.HintSize="435.2,193.6" sap2010:WorkflowViewState.IdRef="CommentOut_1">
                                        <ui:CommentOut.Body>
                                          <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="241.6,115.2" sap2010:WorkflowViewState.IdRef="Sequence_7">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ui:SetTransactionStatus ContinueOnError="{x:Null}" Reason="{x:Null}" ServiceBaseAddress="{x:Null}" TimeoutMS="{x:Null}" TransactionItem="{x:Null}" ErrorType="Business" sap:VirtualizedContainerService.HintSize="200,22.4" sap2010:WorkflowViewState.IdRef="SetTransactionStatus_1" Status="Failed">
                                              <ui:SetTransactionStatus.Analytics>
                                                <scg:Dictionary x:TypeArguments="x:String, InArgument" />
                                              </ui:SetTransactionStatus.Analytics>
                                              <ui:SetTransactionStatus.Output>
                                                <scg:Dictionary x:TypeArguments="x:String, InArgument" />
                                              </ui:SetTransactionStatus.Output>
                                            </ui:SetTransactionStatus>
                                          </Sequence>
                                        </ui:CommentOut.Body>
                                      </ui:CommentOut>
                                      <ui:Comment sap:VirtualizedContainerService.HintSize="435.2,56" sap2010:WorkflowViewState.IdRef="Comment_16" Text="_TODO:_ Error Handling Action: Continue" />
                                    </Sequence>
                                  </ActivityAction>
                                </Catch>
                              </TryCatch.Catches>
                            </TryCatch>
                            <If sap2010:Annotation.AnnotationText="If $vHasError$ Equal To (=) &quot;true&quot; Then  " Condition="[vHasError = &quot;true&quot;]" sap:VirtualizedContainerService.HintSize="564,592.8" sap2010:WorkflowViewState.IdRef="If_4">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <If.Then>
                                <Sequence sap:VirtualizedContainerService.HintSize="420,443.2" sap2010:WorkflowViewState.IdRef="Sequence_9">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Run Logic &quot;ClickAccountSummary&quot; from MetaBot &quot;My MetaBots\Kenan Web\KenanWeb_General.mbot&quot;" sap:VirtualizedContainerService.HintSize="378.4,88" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_5" UnSafe="False" WorkflowFileName="Library\Kenan Web\KenanWeb_General\ClickAccountSummary.xaml">
                                    <ui:InvokeWorkflowFile.Arguments>
                                      <scg:Dictionary x:TypeArguments="x:String, Argument" />
                                    </ui:InvokeWorkflowFile.Arguments>
                                  </ui:InvokeWorkflowFile>
                                  <Assign sap2010:Annotation.AnnotationText="Variable Operation: true To $vCanProceed$" sap:VirtualizedContainerService.HintSize="378.4,60" sap2010:WorkflowViewState.IdRef="Assign_26">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[vCanProceed]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">true</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign sap2010:Annotation.AnnotationText="Variable Operation: [$vTaskname$]: MSISDN inactive in this account To $vMessage$" sap:VirtualizedContainerService.HintSize="378.4,60" sap2010:WorkflowViewState.IdRef="Assign_27">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[vMessage]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">["["+vTaskname+"]: MSISDN inactive in this account"]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Throw DisplayName="Throw StopWorkflow" Exception="[New NotImplementedException(&quot;StopWorkflow&quot;)]" sap:VirtualizedContainerService.HintSize="378.4,22.4" sap2010:WorkflowViewState.IdRef="Throw_4" />
                                </Sequence>
                              </If.Then>
                            </If>
                          </Sequence>
                        </If.Then>
                        <If.Else>
                          <Sequence sap:VirtualizedContainerService.HintSize="420,443.2" sap2010:WorkflowViewState.IdRef="Sequence_11">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Run Logic &quot;ClickAccountSummary&quot; from MetaBot &quot;My MetaBots\Kenan Web\KenanWeb_General.mbot&quot;" sap:VirtualizedContainerService.HintSize="378.4,88" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_6" UnSafe="False" WorkflowFileName="Library\Kenan Web\KenanWeb_General\ClickAccountSummary.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <scg:Dictionary x:TypeArguments="x:String, Argument" />
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <Assign sap2010:Annotation.AnnotationText="Variable Operation: true To $vHasSystemError$" sap:VirtualizedContainerService.HintSize="378.4,60" sap2010:WorkflowViewState.IdRef="Assign_28">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[vHasSystemError]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">true</InArgument>
                              </Assign.Value>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </Assign>
                            <Assign sap2010:Annotation.AnnotationText="Variable Operation: $vTaskname$: Unable to navigate to Kenan services page To $vSystemMessage$" sap:VirtualizedContainerService.HintSize="378.4,60" sap2010:WorkflowViewState.IdRef="Assign_29">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[vSystemMessage]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">[vTaskname+": Unable to navigate to Kenan services page"]</InArgument>
                              </Assign.Value>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </Assign>
                            <Throw DisplayName="Throw StopWorkflow" Exception="[New NotImplementedException(&quot;StopWorkflow&quot;)]" sap:VirtualizedContainerService.HintSize="378.4,22.4" sap2010:WorkflowViewState.IdRef="Throw_5" />
                          </Sequence>
                        </If.Else>
                      </If>
                      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Run Logic &quot;ClickLink&quot; from MetaBot &quot;My MetaBots\Kenan Web\KenanWeb_CCService.mbot&quot;" sap:VirtualizedContainerService.HintSize="2652,88" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_7" UnSafe="False" WorkflowFileName="Library\Kenan Web\KenanWeb_CCService\ClickLink.xaml">
                        <ui:InvokeWorkflowFile.Arguments>
                          <InArgument x:TypeArguments="x:String" x:Key="vLink">["Components"]</InArgument>
                        </ui:InvokeWorkflowFile.Arguments>
                      </ui:InvokeWorkflowFile>
                      <ui:Comment sap:VirtualizedContainerService.HintSize="2652,56" sap2010:WorkflowViewState.IdRef="Comment_19" Text="----------------------&#xA;Get component type based on component ID" />
                      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Run Logic &quot;GetComponentTypeUsingComponentID&quot; from MetaBot &quot;My MetaBots\Kenan Web\KenanWeb_CCService.mbot&quot;" sap:VirtualizedContainerService.HintSize="2652,88" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_8" UnSafe="False" WorkflowFileName="Library\Kenan Web\KenanWeb_CCService\GetComponentTypeUsingComponentID.xaml">
                        <ui:InvokeWorkflowFile.Arguments>
                          <InArgument x:TypeArguments="x:String" x:Key="vComponentID">[vComponentID]</InArgument>
                          <OutArgument x:TypeArguments="x:String" x:Key="vComponentType">[vComponentType]</OutArgument>
                        </ui:InvokeWorkflowFile.Arguments>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:InvokeWorkflowFile>
                      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Run Logic &quot;ClickDetails&quot; from MetaBot &quot;My MetaBots\Kenan Web\KenanWeb_CCService.mbot&quot;" sap:VirtualizedContainerService.HintSize="2652,88" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_9" UnSafe="False" WorkflowFileName="Library\Kenan Web\KenanWeb_CCService\ClickLink.xaml">
                        <ui:InvokeWorkflowFile.Arguments>
                          <InArgument x:TypeArguments="x:String" x:Key="vLink">Details</InArgument>
                        </ui:InvokeWorkflowFile.Arguments>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:InvokeWorkflowFile>
                      <If sap2010:Annotation.AnnotationText="If $vComponentType$ Equal To (=) &quot;Not found&quot; Then  " Condition="[vComponentType = &quot;Not found&quot;]" sap:VirtualizedContainerService.HintSize="2652,692.8" sap2010:WorkflowViewState.IdRef="If_6">
                        <If.Then>
                          <Sequence sap:VirtualizedContainerService.HintSize="420,543.2" sap2010:WorkflowViewState.IdRef="Sequence_12">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Run Logic &quot;ClickAccountSummary&quot; from MetaBot &quot;My MetaBots\Kenan Web\KenanWeb_General.mbot&quot;" sap:VirtualizedContainerService.HintSize="378.4,88" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_10" UnSafe="False" WorkflowFileName="Library\Kenan Web\KenanWeb_General\ClickAccountSummary.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <scg:Dictionary x:TypeArguments="x:String, Argument" />
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <Assign sap2010:Annotation.AnnotationText="Variable Operation: [$vTaskname$]: Contract not found in Kenan To $vMessage$" sap:VirtualizedContainerService.HintSize="378.4,60" sap2010:WorkflowViewState.IdRef="Assign_30">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[vMessage]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">["["+vTaskname+"]: Contract not found in Kenan"]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <Assign sap2010:Annotation.AnnotationText="Variable Operation: true To $vHasError$" sap:VirtualizedContainerService.HintSize="378.4,60" sap2010:WorkflowViewState.IdRef="Assign_31">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[vHasError]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">true</InArgument>
                              </Assign.Value>
                            </Assign>
                            <Assign sap2010:Annotation.AnnotationText="Variable Operation: true To $vCanProceed$" sap:VirtualizedContainerService.HintSize="378.4,60" sap2010:WorkflowViewState.IdRef="Assign_32">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[vCanProceed]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">true</InArgument>
                              </Assign.Value>
                            </Assign>
                            <Throw DisplayName="Throw StopWorkflow" Exception="[New NotImplementedException(&quot;StopWorkflow&quot;)]" sap:VirtualizedContainerService.HintSize="378.4,22.4" sap2010:WorkflowViewState.IdRef="Throw_6" />
                          </Sequence>
                        </If.Then>
                      </If>
                      <ui:Comment sap:VirtualizedContainerService.HintSize="2652,56" sap2010:WorkflowViewState.IdRef="Comment_21" Text="----------------------&#xA;Check if Zerolution or K2" />
                      <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="2652,62.4" sap2010:WorkflowViewState.IdRef="WriteLine_8" Text="[&quot;vUOMDesc&quot; +vUOMDesc]" />
                      <If sap2010:Annotation.AnnotationText="If $vUOMDesc$ Includes &quot;Zerolution&quot; Then  " Condition="[vUOMDesc.Contains(&quot;Zerolution&quot;)]" sap:VirtualizedContainerService.HintSize="2652,1478.4" sap2010:WorkflowViewState.IdRef="If_13">
                        <If.Then>
                          <Sequence sap:VirtualizedContainerService.HintSize="1304,1008" sap2010:WorkflowViewState.IdRef="Sequence_18">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Run Logic &quot;GetPenaltySummaryInfoUsingComponentName&quot; from MetaBot &quot;My MetaBots\Kenan Web\KenanWeb_CCService.mbot&quot;" sap:VirtualizedContainerService.HintSize="1262.4,88" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_11" UnSafe="False" WorkflowFileName="Library\Kenan Web\KenanWeb_CCService\GetPenaltySummaryInfoUsingComponentName.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InArgument x:TypeArguments="x:String" x:Key="vComponentName">[vComponentType]</InArgument>
                                <OutArgument x:TypeArguments="x:String" x:Key="vStartDate">[vContractStartDate]</OutArgument>
                                <OutArgument x:TypeArguments="x:String" x:Key="vDuration">[vContractDuration]</OutArgument>
                                <OutArgument x:TypeArguments="x:String" x:Key="vRemainingDuration">[vContractRemainingDuration]</OutArgument>
                                <OutArgument x:TypeArguments="x:String" x:Key="vPenalty">[vContractPenalty]</OutArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:InvokeWorkflowFile>
                            <If sap2010:Annotation.AnnotationText="If $vContractStartDate$ Equal To (=) &quot;Not found&quot; Then  " Condition="[vContractStartDate = &quot;Not found&quot;]" sap:VirtualizedContainerService.HintSize="1262.4,787.2" sap2010:WorkflowViewState.IdRef="If_9">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <If.Then>
                                <Sequence sap:VirtualizedContainerService.HintSize="304,152.8" sap2010:WorkflowViewState.IdRef="Sequence_13">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <Assign sap2010:Annotation.AnnotationText="Variable Operation: [$vTaskname$]: Contract not found in Kenan To $vMessage$" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_33">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[vMessage]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">["["+vTaskname+"]: Contract not found in Kenan"]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                </Sequence>
                              </If.Then>
                              <If.Else>
                                <Sequence sap:VirtualizedContainerService.HintSize="914.4,637.6" sap2010:WorkflowViewState.IdRef="Sequence_17">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <If sap2010:Annotation.AnnotationText="If $vContractStartDate$ Not Equal To (&lt;&gt;) $vYtdDate$ Then  " Condition="[vContractStartDate &lt;&gt; vYtdDate]" sap:VirtualizedContainerService.HintSize="872.8,544.8" sap2010:WorkflowViewState.IdRef="If_8">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <If.Then>
                                      <Sequence sap:VirtualizedContainerService.HintSize="304,152.8" sap2010:WorkflowViewState.IdRef="Sequence_14">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <Assign sap2010:Annotation.AnnotationText="Variable Operation: [$vTaskname$]: Incorrect contract activation date in Kenan ($vContractStartDate$) To $vMessage$" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_34">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:String">[vMessage]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:String">["["+vTaskname+"]: Incorrect contract activation date in Kenan ("+vContractStartDate+")"]</InArgument>
                                          </Assign.Value>
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                        </Assign>
                                      </Sequence>
                                    </If.Then>
                                    <If.Else>
                                      <Sequence sap:VirtualizedContainerService.HintSize="524.8,395.2" sap2010:WorkflowViewState.IdRef="Sequence_16">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <If sap2010:Annotation.AnnotationText="Else If $vContractDuration$ Not Equal To(&lt;&gt;) $vTenure$ OR $vContractPenalty$ Equal To (=) &quot;&quot; Then" Condition="[vContractDuration &lt;&gt; vTenure or vContractPenalty = &quot;&quot;]" sap:VirtualizedContainerService.HintSize="483.2,302.4" sap2010:WorkflowViewState.IdRef="If_7">
                                          <If.Then>
                                            <Sequence sap:VirtualizedContainerService.HintSize="304,152.8" sap2010:WorkflowViewState.IdRef="Sequence_15">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <Assign sap2010:Annotation.AnnotationText="Variable Operation: [$vTaskname$]: Incorrect contract details in Kenan To $vMessage$" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_35">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:String">[vMessage]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:String">["["+vTaskname+"]: Incorrect contract details in Kenan"]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                            </Sequence>
                                          </If.Then>
                                        </If>
                                      </Sequence>
                                    </If.Else>
                                  </If>
                                </Sequence>
                              </If.Else>
                            </If>
                          </Sequence>
                        </If.Then>
                        <If.Else>
                          <Sequence sap:VirtualizedContainerService.HintSize="1304,1328.8" sap2010:WorkflowViewState.IdRef="Sequence_24">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:Comment sap:VirtualizedContainerService.HintSize="1262.4,76" sap2010:WorkflowViewState.IdRef="Comment_22" Text="----------------------&#xA;Get contract component, duration, remaining duration, duration units &amp; penalty and check" />
                            <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="1262.4,62.4" sap2010:WorkflowViewState.IdRef="WriteLine_9" Text="[&quot;Comp&quot; +vComponentType]" />
                            <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Run Logic &quot;GetDynamicPenaltySummaryInfoUsingComponentName&quot; from MetaBot &quot;My MetaBots\Kenan Web\KenanWeb_CCService.mbot&quot;" sap:VirtualizedContainerService.HintSize="1262.4,88" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_12" UnSafe="False" WorkflowFileName="Library\Kenan Web\KenanWeb_CCService\GetDynamicPenaltySummaryInfoUsingComponentName.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InArgument x:TypeArguments="x:String" x:Key="vComponentName">[vComponentType]</InArgument>
                                <OutArgument x:TypeArguments="x:String" x:Key="vPenalty">[vContractPenalty]</OutArgument>
                                <OutArgument x:TypeArguments="x:String" x:Key="vRemainingDuration">[vContractRemainingDuration]</OutArgument>
                                <OutArgument x:TypeArguments="x:String" x:Key="vStartDate">[vContractStartDate]</OutArgument>
                                <OutArgument x:TypeArguments="x:String" x:Key="vDuration">[vContractDuration]</OutArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:InvokeWorkflowFile>
                            <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="1262.4,62.4" sap2010:WorkflowViewState.IdRef="WriteLine_10" Text="[&quot;Contract Start Date &quot; +vContractStartDate]" />
                            <If sap2010:Annotation.AnnotationText="If $vContractStartDate$ Equal To (=) &quot;Not found&quot; Then  " Condition="[vContractStartDate = &quot;Not found&quot;]" sap:VirtualizedContainerService.HintSize="1262.4,787.2" sap2010:WorkflowViewState.IdRef="If_12">
                              <If.Then>
                                <Sequence sap:VirtualizedContainerService.HintSize="304,152.8" sap2010:WorkflowViewState.IdRef="Sequence_19">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <Assign sap2010:Annotation.AnnotationText="Variable Operation: [$vTaskname$]: Contract not found in Kenan To $vMessage$" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_36">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[vMessage]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">["["+vTaskname+"]: Contract not found in Kenan"]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                </Sequence>
                              </If.Then>
                              <If.Else>
                                <Sequence sap:VirtualizedContainerService.HintSize="914.4,637.6" sap2010:WorkflowViewState.IdRef="Sequence_23">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <If sap2010:Annotation.AnnotationText="If $vContractStartDate$ Not Equal To (&lt;&gt;) $vYtdDate$ Then  " Condition="[vContractStartDate &lt;&gt; vYtdDate]" sap:VirtualizedContainerService.HintSize="872.8,544.8" sap2010:WorkflowViewState.IdRef="If_11">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <If.Then>
                                      <Sequence sap:VirtualizedContainerService.HintSize="304,152.8" sap2010:WorkflowViewState.IdRef="Sequence_20">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <Assign sap2010:Annotation.AnnotationText="Variable Operation: [$vTaskname$]: Incorrect contract activation date in Kenan ($vContractStartDate$) To $vMessage$" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_37">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:String">[vMessage]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:String">["["+vTaskname+"]: Incorrect contract activation date in Kenan ("+vContractStartDate+")"]</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                      </Sequence>
                                    </If.Then>
                                    <If.Else>
                                      <Sequence sap:VirtualizedContainerService.HintSize="524.8,395.2" sap2010:WorkflowViewState.IdRef="Sequence_22">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <If sap2010:Annotation.AnnotationText="Else If $vContractDuration$ Not Equal To(&lt;&gt;) $vTenure$ OR $vContractPenalty$ Equal To (=) &quot;&quot; Then" Condition="[vContractDuration &lt;&gt; vTenure or vContractPenalty = &quot;&quot;]" sap:VirtualizedContainerService.HintSize="483.2,302.4" sap2010:WorkflowViewState.IdRef="If_10">
                                          <If.Then>
                                            <Sequence sap:VirtualizedContainerService.HintSize="304,152.8" sap2010:WorkflowViewState.IdRef="Sequence_21">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <Assign sap2010:Annotation.AnnotationText="Variable Operation: [$vTaskname$]: Incorrect contract details in Kenan To $vMessage$" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_38">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:String">[vMessage]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:String">["["+vTaskname+"]: Incorrect contract details in Kenan"]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                            </Sequence>
                                          </If.Then>
                                        </If>
                                      </Sequence>
                                    </If.Else>
                                  </If>
                                </Sequence>
                              </If.Else>
                            </If>
                          </Sequence>
                        </If.Else>
                      </If>
                      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Run Logic &quot;ClickAccountSummary&quot; from MetaBot &quot;My MetaBots\Kenan Web\KenanWeb_General.mbot&quot;" sap:VirtualizedContainerService.HintSize="2652,88" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_13" UnSafe="False" WorkflowFileName="Library\Kenan Web\KenanWeb_General\ClickAccountSummary.xaml">
                        <ui:InvokeWorkflowFile.Arguments>
                          <scg:Dictionary x:TypeArguments="x:String, Argument" />
                        </ui:InvokeWorkflowFile.Arguments>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:InvokeWorkflowFile>
                    </Sequence>
                  </If.Then>
                </If>
                <ui:Comment sap:VirtualizedContainerService.HintSize="2837.6,56" sap2010:WorkflowViewState.IdRef="Comment_23" Text="----------------------&#xA;Check if any query was found" />
                <If sap2010:Annotation.AnnotationText="If $vHasResults$ Equal To (=) &quot;false&quot; Then  " Condition="[vHasResults = &quot;false&quot;]" sap:VirtualizedContainerService.HintSize="2837.6,302.4" sap2010:WorkflowViewState.IdRef="If_15">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If.Then>
                    <Sequence sap:VirtualizedContainerService.HintSize="304,152.8" sap2010:WorkflowViewState.IdRef="Sequence_26">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Assign sap2010:Annotation.AnnotationText="Variable Operation: [$vTaskname$]: Check failed. UOM query not found. Raise to RetailOps To $vMessage$" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_39">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[vMessage]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">["["+vTaskname+"]: Check failed. UOM query not found. Raise to RetailOps"]</InArgument>
                        </Assign.Value>
                      </Assign>
                    </Sequence>
                  </If.Then>
                </If>
                <ui:Comment sap:VirtualizedContainerService.HintSize="2837.6,56" sap2010:WorkflowViewState.IdRef="Comment_24" Text="----------------------&#xA;Finalise" />
                <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="2837.6,62.4" sap2010:WorkflowViewState.IdRef="WriteLine_13" Text="[vMessage]" />
                <ui:Replace sap2010:Annotation.AnnotationText="String Operation: Replace &quot;^\s+|\s+$&quot; with &quot;&quot; in &quot;$vMessage$&quot; and assign output to $vMessage$ " sap:VirtualizedContainerService.HintSize="2837.6,60" sap2010:WorkflowViewState.IdRef="Replace_1" Input="[vMessage]" IsBuilderTabModified="False" Pattern="^\s+|\s+$" RegexOption="IgnoreCase, Compiled" Result="[vMessage]">
                  <ui:Replace.Replacement>
                    <InArgument x:TypeArguments="x:String">
                      <Literal x:TypeArguments="x:String" Value="" />
                    </InArgument>
                  </ui:Replace.Replacement>
                </ui:Replace>
                <If sap2010:Annotation.AnnotationText="If $vMessage$ Equal To (=) &quot;&quot; Then  " Condition="[vMessage = &quot;&quot;]" sap:VirtualizedContainerService.HintSize="2837.6,402.4" sap2010:WorkflowViewState.IdRef="If_16">
                  <If.Then>
                    <Sequence sap:VirtualizedContainerService.HintSize="304,252.8" sap2010:WorkflowViewState.IdRef="Sequence_27">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Assign sap2010:Annotation.AnnotationText="Variable Operation: false To $vHasError$" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_40">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[vHasError]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">false</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign sap2010:Annotation.AnnotationText="Variable Operation: true To $vCanProceed$" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_41">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[vCanProceed]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">true</InArgument>
                        </Assign.Value>
                      </Assign>
                    </Sequence>
                  </If.Then>
                  <If.Else>
                    <Sequence sap:VirtualizedContainerService.HintSize="304,252.8" sap2010:WorkflowViewState.IdRef="Sequence_28">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Assign sap2010:Annotation.AnnotationText="Variable Operation: true To $vHasError$" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_42">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[vHasError]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">true</InArgument>
                        </Assign.Value>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </Assign>
                      <Assign sap2010:Annotation.AnnotationText="Variable Operation: true To $vCanProceed$" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_43">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[vCanProceed]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">true</InArgument>
                        </Assign.Value>
                      </Assign>
                    </Sequence>
                  </If.Else>
                </If>
              </Sequence>
            </TryCatch.Try>
            <TryCatch.Catches>
              <Catch x:TypeArguments="s:NotImplementedException" sap:VirtualizedContainerService.HintSize="2882.4,105.6" sap2010:WorkflowViewState.IdRef="Catch`1_3">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ActivityAction x:TypeArguments="s:NotImplementedException">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="s:NotImplementedException" Name="exception" />
                  </ActivityAction.Argument>
                  <Rethrow sap:VirtualizedContainerService.HintSize="200,22.4" sap2010:WorkflowViewState.IdRef="Rethrow_1" />
                </ActivityAction>
              </Catch>
              <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="2882.4,556" sap2010:WorkflowViewState.IdRef="Catch`1_2">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ActivityAction x:TypeArguments="s:Exception">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                  </ActivityAction.Argument>
                  <Sequence sap:VirtualizedContainerService.HintSize="375.2,485.6" sap2010:WorkflowViewState.IdRef="Sequence_31">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="Assign_44">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[vHasSystemError]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">true</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="Assign_45">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[processStatus]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">Failed</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign sap2010:Annotation.AnnotationText="Variable Operation: $vTaskname$ ($Error Line Number$): $Error Description$ To $vSystemMessage$" sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="Assign_49">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[vSystemMessage]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[vTaskname+": "+exception.Message]</InArgument>
                      </Assign.Value>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </Assign>
                    <ui:LogMessage sap:VirtualizedContainerService.HintSize="333.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[vTaskname + &quot; - Process Status: Failed. Exception: &quot;+exception.Message]" />
                  </Sequence>
                </ActivityAction>
              </Catch>
            </TryCatch.Catches>
          </TryCatch>
        </Sequence>
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="s:NotImplementedException" sap:VirtualizedContainerService.HintSize="2960.8,126.4" sap2010:WorkflowViewState.IdRef="Catch`1_4">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ActivityAction x:TypeArguments="s:NotImplementedException">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:NotImplementedException" Name="exception" />
            </ActivityAction.Argument>
            <ui:Comment sap:VirtualizedContainerService.HintSize="333.6,56" sap2010:WorkflowViewState.IdRef="Comment_27" Text="// Stop Workflow" />
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
    </TryCatch>
  </Sequence>
</Activity>