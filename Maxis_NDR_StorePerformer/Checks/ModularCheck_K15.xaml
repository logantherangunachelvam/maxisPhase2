<Activity mc:Ignorable="sap sap2010" x:Class="ModularCheck_K15" this:ModularCheck_K15.vXMLFilePath="[&quot;&quot;]" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:ss="clr-namespace:System.Security;assembly=mscorlib" xmlns:sxl="clr-namespace:System.Xml.Linq;assembly=System.Xml.Linq" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="vPlaceholder" Type="InOutArgument(x:String)" />
    <x:Property Name="vMessage" Type="OutArgument(x:String)" />
    <x:Property Name="vHasError" Type="OutArgument(x:String)" />
    <x:Property Name="vCanProceed" Type="OutArgument(x:String)" />
    <x:Property Name="vSystemMessage" Type="OutArgument(x:String)" />
    <x:Property Name="vHasSystemError" Type="OutArgument(x:String)" />
    <x:Property Name="vXMLFilePath" Type="InArgument(x:String)" />
    <x:Property Name="in_ConfigXLS" Type="InArgument(scg:Dictionary(x:String, x:String))" />
    <x:Property Name="vMaxisCredDic" Type="InArgument(scg:Dictionary(x:String, scg:Dictionary(x:String, ss:SecureString)))" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1605.33333333333,8672.66666666667</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="70">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Database.Activities</x:String>
      <x:String>UiPath.Database</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>UiPath.CSV.Activities</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.CSV</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>UiPath.Orchestrator.Client</x:String>
      <x:String>UiPath.Orchestrator.Client.Models</x:String>
      <x:String>UiPath.Mail.Activities</x:String>
      <x:String>UiPath.Mail.Exchange.Activities</x:String>
      <x:String>UiPath.Mail.IMAP.Activities</x:String>
      <x:String>UiPath.Mail.Outlook.Activities</x:String>
      <x:String>UiPath.Mail.POP3.Activities</x:String>
      <x:String>UiPath.Mail.SMTP.Activities</x:String>
      <x:String>UiPath.Web.Activities</x:String>
      <x:String>UiPath.JSON.Activities</x:String>
      <x:String>UiPath.REST.Activities</x:String>
      <x:String>UiPath.SOAP.Activities</x:String>
      <x:String>UiPath.XML.Activities</x:String>
      <x:String>UiPath.Web</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.IO</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="52">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>system</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Plugin.Workflow</AssemblyReference>
      <AssemblyReference>UiPath.Database.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Database</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OrchestratorClient</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Web.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Web</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <sap:WorkflowViewStateService.ViewState>
    <scg:Dictionary x:TypeArguments="x:String, x:Object">
      <x:Boolean x:Key="ShouldExpandAll">True</x:Boolean>
    </scg:Dictionary>
  </sap:WorkflowViewStateService.ViewState>
  <Sequence sap:VirtualizedContainerService.HintSize="1585.33333333333,8572.66666666667" sap2010:WorkflowViewState.IdRef="Sequence_17">
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="1543.33333333333,8480.66666666667" sap2010:WorkflowViewState.IdRef="TryCatch_3">
      <TryCatch.Try>
        <Sequence sap:VirtualizedContainerService.HintSize="1504.66666666667,8036.66666666667" sap2010:WorkflowViewState.IdRef="Sequence_16">
          <Sequence.Variables>
            <Variable x:TypeArguments="x:String" Default="[&quot;&quot;]" Name="vPlaceholder" />
            <Variable x:TypeArguments="x:TimeSpan" Default="[]" Name="vDiffDays" />
            <Variable x:TypeArguments="x:String" Default="[&quot;&quot;]" Name="vMSISDN" />
            <Variable x:TypeArguments="x:String" Default="[&quot;&quot;]" Name="vPrevAccNo" />
            <Variable x:TypeArguments="x:String" Default="[&quot;&quot;]" Name="vSIDeactivationDateStr" />
            <Variable x:TypeArguments="x:String" Default="[&quot;&quot;]" Name="vSICreationDateStr" />
            <Variable x:TypeArguments="x:String" Default="[&quot;&quot;]" Name="vTaskname" />
            <Variable x:TypeArguments="x:String" Default="[&quot;&quot;]" Name="vAccNo" />
            <Variable x:TypeArguments="x:String" Default="[&quot;&quot;]" Name="vTableHeader" />
            <Variable x:TypeArguments="ui:Image" Name="screenshotImage" />
            <Variable x:TypeArguments="x:String" Name="processStatus" />
            <Variable x:TypeArguments="x:String" Default="[&quot;&quot;]" Name="CurrentTaskName" />
          </Sequence.Variables>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:Comment sap:VirtualizedContainerService.HintSize="1462.66666666667,55.3333333333333" sap2010:WorkflowViewState.IdRef="Comment_1" Text="----------------------&#xA;Initialise variables" />
          <If sap2010:Annotation.AnnotationText="If $vPlaceholder$ Not Equal To (&lt;&gt;) &quot;&quot; Then  " Condition="[vPlaceholder &lt;&gt; &quot;&quot;]" sap:VirtualizedContainerService.HintSize="1462.66666666667,268" sap2010:WorkflowViewState.IdRef="If_1">
            <If.Then>
              <Sequence sap:VirtualizedContainerService.HintSize="242,114" sap2010:WorkflowViewState.IdRef="Sequence_1">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Throw DisplayName="Throw StopWorkflow" Exception="[New NotImplementedException(&quot;StopWorkflow&quot;)]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Throw_3" />
              </Sequence>
            </If.Then>
          </If>
          <Assign sap:VirtualizedContainerService.HintSize="1463,60" sap2010:WorkflowViewState.IdRef="Assign_25">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[vTaskname]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">["ModularCheck_K15"]</InArgument>
            </Assign.Value>
          </Assign>
          <Assign sap2010:Annotation.AnnotationText="Variable Operation: false To $vHasSystemError$" sap:VirtualizedContainerService.HintSize="1463,60" sap2010:WorkflowViewState.IdRef="Assign_1">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[vHasSystemError]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">false</InArgument>
            </Assign.Value>
          </Assign>
          <Assign sap2010:Annotation.AnnotationText="Variable Operation:  To $vSystemMessage$" sap:VirtualizedContainerService.HintSize="1463,60" sap2010:WorkflowViewState.IdRef="Assign_2">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[vSystemMessage]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">
                <Literal x:TypeArguments="x:String" Value="" />
              </InArgument>
            </Assign.Value>
          </Assign>
          <Assign sap2010:Annotation.AnnotationText="Variable Operation: false To $vHasError$" sap:VirtualizedContainerService.HintSize="1463,60" sap2010:WorkflowViewState.IdRef="Assign_3">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[vHasError]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">false</InArgument>
            </Assign.Value>
          </Assign>
          <Assign sap2010:Annotation.AnnotationText="Variable Operation:  To $vMessage$" sap:VirtualizedContainerService.HintSize="1463,60" sap2010:WorkflowViewState.IdRef="Assign_4">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[vMessage]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">
                <Literal x:TypeArguments="x:String" Value="" />
              </InArgument>
            </Assign.Value>
          </Assign>
          <Assign sap2010:Annotation.AnnotationText="Variable Operation: true To $vCanProceed$" sap:VirtualizedContainerService.HintSize="1463,60" sap2010:WorkflowViewState.IdRef="Assign_5">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[vCanProceed]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">true</InArgument>
            </Assign.Value>
          </Assign>
          <TryCatch sap2010:Annotation.AnnotationText="Begin Error Handling; Action: Continue; Options: Variable Assignment,  Task Status: Pass" sap:VirtualizedContainerService.HintSize="1463,6941" sap2010:WorkflowViewState.IdRef="TryCatch_2">
            <TryCatch.Try>
              <Sequence sap:VirtualizedContainerService.HintSize="1417,6084" sap2010:WorkflowViewState.IdRef="Sequence_12">
                <Sequence.Variables>
                  <Variable x:TypeArguments="scg:Dictionary(x:String, x:String)" Default="[New Dictionary(Of String, String)]" Name="XMLSessionFileName" />
                  <Variable x:TypeArguments="x:String" Name="XMLFileContent" />
                  <Variable x:TypeArguments="sxl:XDocument" Name="XMLDocumentVar" />
                  <Variable x:TypeArguments="scg:Dictionary(x:String, sxl:XDocument)" Default="[New Dictionary(Of String, XDocument)]" Name="XMLSessionXDocument" />
                  <Variable x:TypeArguments="x:Object" Name="XMLNodeContent" />
                </Sequence.Variables>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:Comment sap:VirtualizedContainerService.HintSize="1375,22" sap2010:WorkflowViewState.IdRef="Comment_3" Text="----------------------&#xA;Get MSISDN and Acc No" />
                <Assign sap2010:Annotation.AnnotationText="XML : Start XML Session using existing file &quot;$vXMLFilePath$&quot; Session:Default" sap:VirtualizedContainerService.HintSize="1375,22" sap2010:WorkflowViewState.IdRef="Assign_6">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[XMLSessionFileName("Default")]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[vXMLFilePath]</InArgument>
                  </Assign.Value>
                </Assign>
                <ui:ReadTextFile sap2010:Annotation.AnnotationText="XML : Start XML Session using existing file &quot;$vXMLFilePath$&quot; Session:Default" Content="[XMLFileContent]" FileName="[vXMLFilePath]" sap:VirtualizedContainerService.HintSize="1375,22" sap2010:WorkflowViewState.IdRef="ReadTextFile_1">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:ReadTextFile>
                <ui:DeserializeXml sap2010:Annotation.AnnotationText="XML : Start XML Session using existing file &quot;$vXMLFilePath$&quot; Session:Default" sap:VirtualizedContainerService.HintSize="1375,22" sap2010:WorkflowViewState.IdRef="DeserializeXml_1" XMLDocument="[XMLDocumentVar]" XMLString="[XMLFileContent]" />
                <Assign sap2010:Annotation.AnnotationText="XML : Start XML Session using existing file &quot;$vXMLFilePath$&quot; Session:Default" sap:VirtualizedContainerService.HintSize="1375,22" sap2010:WorkflowViewState.IdRef="Assign_7">
                  <Assign.To>
                    <OutArgument x:TypeArguments="sxl:XDocument">[XMLSessionXDocument("Default")]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="sxl:XDocument">[XMLDocumentVar]</InArgument>
                  </Assign.Value>
                </Assign>
                <ui:ExecuteXPath XMLString="{x:Null}" sap2010:Annotation.AnnotationText="XML : Get Single Node value from XPath location &quot;/info/PrevAccNo&quot; and assign to variable &quot;$vPrevAccNo$&quot;. Session:Default" ExistingXML="[XMLSessionXDocument(&quot;Default&quot;)]" sap:VirtualizedContainerService.HintSize="1375,22" sap2010:WorkflowViewState.IdRef="ExecuteXPath_1" Result="[XMLNodeContent]" XPathExpression="string(/info/PrevAccNo/text())" />
                <Assign sap2010:Annotation.AnnotationText="XML : Get Single Node value from XPath location &quot;/info/PrevAccNo&quot; and assign to variable &quot;$vPrevAccNo$&quot;. Session:Default" sap:VirtualizedContainerService.HintSize="1375,22" sap2010:WorkflowViewState.IdRef="Assign_8">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[vPrevAccNo]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[XMLNodeContent.ToString()]</InArgument>
                  </Assign.Value>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </Assign>
                <ui:ExecuteXPath XMLString="{x:Null}" sap2010:Annotation.AnnotationText="XML : Get Single Node value from XPath location &quot;/info/AccNo&quot; and assign to variable &quot;$vAccNo$&quot;. Session:Default" ExistingXML="[XMLSessionXDocument(&quot;Default&quot;)]" sap:VirtualizedContainerService.HintSize="1375,89" sap2010:WorkflowViewState.IdRef="ExecuteXPath_2" Result="[XMLNodeContent]" XPathExpression="string(/info/AccNo/text())">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:ExecuteXPath>
                <Assign sap2010:Annotation.AnnotationText="XML : Get Single Node value from XPath location &quot;/info/AccNo&quot; and assign to variable &quot;$vAccNo$&quot;. Session:Default" sap:VirtualizedContainerService.HintSize="1375,60" sap2010:WorkflowViewState.IdRef="Assign_9">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[vAccNo]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[XMLNodeContent.ToString()]</InArgument>
                  </Assign.Value>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </Assign>
                <ui:ExecuteXPath XMLString="{x:Null}" sap2010:Annotation.AnnotationText="XML : Get Single Node value from XPath location &quot;/info/MSISDN&quot; and assign to variable &quot;$vMSISDN$&quot;. Session:Default" ExistingXML="[XMLSessionXDocument(&quot;Default&quot;)]" sap:VirtualizedContainerService.HintSize="1375,89" sap2010:WorkflowViewState.IdRef="ExecuteXPath_3" Result="[XMLNodeContent]" XPathExpression="string(/info/MSISDN/text())" />
                <Assign sap2010:Annotation.AnnotationText="XML : Get Single Node value from XPath location &quot;/info/MSISDN&quot; and assign to variable &quot;$vMSISDN$&quot;. Session:Default" sap:VirtualizedContainerService.HintSize="1375,60" sap2010:WorkflowViewState.IdRef="Assign_10">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[vMSISDN]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[XMLNodeContent.ToString()]</InArgument>
                  </Assign.Value>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </Assign>
                <ui:Comment sap:VirtualizedContainerService.HintSize="1375,55" sap2010:WorkflowViewState.IdRef="Comment_4" Text="----------------------&#xA;Close current tab" />
                <ui:SendHotkey DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" Activate="True" sap2010:Annotation.AnnotationText="Keystrokes: [CTRL DOWN]w[CTRL UP] in &quot;Kenan Admin Application -*&quot;" ClickBeforeTyping="False" DisplayName="SendHotkey to close current tab" EmptyField="False" sap:VirtualizedContainerService.HintSize="1375,116" sap2010:WorkflowViewState.IdRef="SendHotkey_1" Key="w" KeyModifiers="Ctrl" SendWindowMessages="False" SpecialKey="False">
                  <ui:SendHotkey.Target>
                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="&lt;wnd app='*' title='Kenan Admin Application -*' /&gt;" WaitForReady="INTERACTIVE">
                      <ui:Target.TimeoutMS>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:Target.TimeoutMS>
                    </ui:Target>
                  </ui:SendHotkey.Target>
                </ui:SendHotkey>
                <ui:Comment sap:VirtualizedContainerService.HintSize="1375,74" sap2010:WorkflowViewState.IdRef="Comment_5" Text="----------------------&#xA;Click into MSISDN in prev account to get creation and deactivation date" />
                <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Run Logic &quot;ClickAccount&quot; from MetaBot &quot;My MetaBots\Kenan Web\KenanWeb_CC.mbot&quot;" sap:VirtualizedContainerService.HintSize="1375,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="Library\Kenan Web\KenanWeb_CC\GetAccNoBelow.xaml">
                  <ui:InvokeWorkflowFile.Arguments>
                    <OutArgument x:TypeArguments="x:String" x:Key="vOldAccNo">[vPrevAccNo]</OutArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="vNewAccNo">[vAccNo]</InArgument>
                  </ui:InvokeWorkflowFile.Arguments>
                </ui:InvokeWorkflowFile>
                <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Run Logic &quot;ClickAccount&quot; from MetaBot &quot;My MetaBots\Kenan Web\KenanWeb_CC.mbot&quot;" DisplayName="Invoke Workflow File" sap:VirtualizedContainerService.HintSize="1375,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_11" UnSafe="False" WorkflowFileName="Library\Kenan Web\KenanWeb_CC\ClickAccount.xaml">
                  <ui:InvokeWorkflowFile.Arguments>
                    <InArgument x:TypeArguments="x:String" x:Key="vAccountNo">[vPrevAccNo]</InArgument>
                  </ui:InvokeWorkflowFile.Arguments>
                </ui:InvokeWorkflowFile>
                <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="1375,286" sap2010:WorkflowViewState.IdRef="CommentOut_2">
                  <ui:CommentOut.Body>
                    <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="376,208" sap2010:WorkflowViewState.IdRef="Sequence_19">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:SendHotkey DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" Activate="True" sap2010:Annotation.AnnotationText="Keystrokes: [CTRL DOWN]w[CTRL UP] in &quot;Kenan Admin Application -*&quot;" ClickBeforeTyping="False" DisplayName="Send Hotkey" EmptyField="False" sap:VirtualizedContainerService.HintSize="334,116" sap2010:WorkflowViewState.IdRef="SendHotkey_6" Key="w" KeyModifiers="Ctrl" SendWindowMessages="False" SpecialKey="False">
                        <ui:SendHotkey.Target>
                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="&lt;wnd app='*' title='Kenan Admin Application -*' /&gt;" WaitForReady="INTERACTIVE">
                            <ui:Target.TimeoutMS>
                              <InArgument x:TypeArguments="x:Int32" />
                            </ui:Target.TimeoutMS>
                          </ui:Target>
                        </ui:SendHotkey.Target>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:SendHotkey>
                    </Sequence>
                  </ui:CommentOut.Body>
                </ui:CommentOut>
                <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Run Logic &quot;ClickServices&quot; from MetaBot &quot;My MetaBots\Kenan Web\KenanWeb_General.mbot&quot;" sap:VirtualizedContainerService.HintSize="1375,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_3" UnSafe="False" WorkflowFileName="Library\Kenan Web\KenanWeb_General\ClickServices.xaml">
                  <ui:InvokeWorkflowFile.Arguments>
                    <scg:Dictionary x:TypeArguments="x:String, Argument" />
                  </ui:InvokeWorkflowFile.Arguments>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:InvokeWorkflowFile>
                <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Run Logic &quot;ClickShowInactive&quot; from MetaBot &quot;My MetaBots\Kenan Web\KenanWeb_CCServices.mbot&quot;" sap:VirtualizedContainerService.HintSize="1375,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_4" UnSafe="False" WorkflowFileName="Library\Kenan Web\KenanWeb_CCServices\ClickShowInactive.xaml">
                  <ui:InvokeWorkflowFile.Arguments>
                    <scg:Dictionary x:TypeArguments="x:String, Argument" />
                  </ui:InvokeWorkflowFile.Arguments>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:InvokeWorkflowFile>
                <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Check for &quot;Working Set&quot; header in table" sap:VirtualizedContainerService.HintSize="1375,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_12" UnSafe="False" WorkflowFileName="Library\Kenan Web\KenanWeb_CCServices\GetIdentifierbyCellIndex.xaml">
                  <ui:InvokeWorkflowFile.Arguments>
                    <InArgument x:TypeArguments="x:String" x:Key="vRowIndex">0</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="vColumnIndex">0</InArgument>
                    <OutArgument x:TypeArguments="x:String" x:Key="vCellValue">[vTableHeader]</OutArgument>
                  </ui:InvokeWorkflowFile.Arguments>
                </ui:InvokeWorkflowFile>
                <If sap2010:Annotation.AnnotationText="If $vTableHeader$ Includes &quot;Working Set&quot; Then  " Condition="[vTableHeader.Contains(&quot;Working&quot;)]" sap:VirtualizedContainerService.HintSize="1375,3140" sap2010:WorkflowViewState.IdRef="If_4">
                  <If.Then>
                    <Sequence sap:VirtualizedContainerService.HintSize="1026,2992" sap2010:WorkflowViewState.IdRef="Sequence_8">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="ui:Image" Name="screenshotImage" />
                        <Variable x:TypeArguments="x:String" Name="processStatus" />
                      </Sequence.Variables>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <TryCatch sap2010:Annotation.AnnotationText="Begin Error Handling; Action: Continue; Options: Variable Assignment,  Task Status: Pass" sap:VirtualizedContainerService.HintSize="984,1382" sap2010:WorkflowViewState.IdRef="TryCatch_1">
                        <TryCatch.Try>
                          <Sequence sap:VirtualizedContainerService.HintSize="421,179" sap2010:WorkflowViewState.IdRef="Sequence_2">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Run Logic &quot;ClickIdentifier&quot; from MetaBot &quot;My MetaBots\Kenan Web\KenanWeb_CCServices.mbot&quot;" sap:VirtualizedContainerService.HintSize="379,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_5" UnSafe="False" WorkflowFileName="Library\Kenan Web\KenanWeb_CCServices\ClickIdentifier.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InArgument x:TypeArguments="x:String" x:Key="vServiceId">[vMSISDN]</InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                          </Sequence>
                        </TryCatch.Try>
                        <TryCatch.Catches>
                          <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="484,893" sap2010:WorkflowViewState.IdRef="Catch`1_1">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ActivityAction x:TypeArguments="s:Exception">
                              <ActivityAction.Argument>
                                <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                              </ActivityAction.Argument>
                              <Sequence sap:VirtualizedContainerService.HintSize="478,824" sap2010:WorkflowViewState.IdRef="Sequence_4">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <Assign sap:VirtualizedContainerService.HintSize="436,60" sap2010:WorkflowViewState.IdRef="Assign_11">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[vHasError]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">true</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <Assign sap:VirtualizedContainerService.HintSize="436,60" sap2010:WorkflowViewState.IdRef="Assign_12">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[processStatus]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">Failed</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <ui:LogMessage sap:VirtualizedContainerService.HintSize="436,91" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;Process Status: Failed. Exception: &quot;+exception.Message]" />
                                <ui:Comment sap:VirtualizedContainerService.HintSize="436,74" sap2010:WorkflowViewState.IdRef="Comment_7" Text="When working with Orchestrator transactions, the following activity can be used." />
                                <ui:CommentOut sap:VirtualizedContainerService.HintSize="436,192" sap2010:WorkflowViewState.IdRef="CommentOut_1">
                                  <ui:CommentOut.Body>
                                    <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="242,114" sap2010:WorkflowViewState.IdRef="Sequence_3">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ui:SetTransactionStatus ContinueOnError="{x:Null}" Reason="{x:Null}" ServiceBaseAddress="{x:Null}" TimeoutMS="{x:Null}" TransactionItem="{x:Null}" ErrorType="Business" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="SetTransactionStatus_1" Status="Failed">
                                        <ui:SetTransactionStatus.Analytics>
                                          <scg:Dictionary x:TypeArguments="x:String, InArgument" />
                                        </ui:SetTransactionStatus.Analytics>
                                        <ui:SetTransactionStatus.Output>
                                          <scg:Dictionary x:TypeArguments="x:String, InArgument" />
                                        </ui:SetTransactionStatus.Output>
                                      </ui:SetTransactionStatus>
                                    </Sequence>
                                  </ui:CommentOut.Body>
                                </ui:CommentOut>
                                <ui:Comment sap:VirtualizedContainerService.HintSize="436,55" sap2010:WorkflowViewState.IdRef="Comment_8" Text="_TODO:_ Error Handling Action: Continue" />
                              </Sequence>
                            </ActivityAction>
                          </Catch>
                        </TryCatch.Catches>
                      </TryCatch>
                      <If sap2010:Annotation.AnnotationText="If $vHasError$ Equal To (=) &quot;true&quot; Then  " Condition="[vHasError = &quot;true&quot;]" sap:VirtualizedContainerService.HintSize="984,1478" sap2010:WorkflowViewState.IdRef="If_3">
                        <If.Then>
                          <Sequence sap:VirtualizedContainerService.HintSize="413,497" sap2010:WorkflowViewState.IdRef="Sequence_5">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:SendHotkey DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" Activate="True" sap2010:Annotation.AnnotationText="Keystrokes: [CTRL DOWN]w[CTRL UP] in &quot;Kenan Admin Application -*&quot;" ClickBeforeTyping="False" EmptyField="False" sap:VirtualizedContainerService.HintSize="371,116" sap2010:WorkflowViewState.IdRef="SendHotkey_2" Key="w" KeyModifiers="Ctrl" SendWindowMessages="False" SpecialKey="False">
                              <ui:SendHotkey.Target>
                                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="&lt;wnd app='*' title='Kenan Admin Application -*' /&gt;" WaitForReady="INTERACTIVE">
                                  <ui:Target.TimeoutMS>
                                    <InArgument x:TypeArguments="x:Int32" />
                                  </ui:Target.TimeoutMS>
                                </ui:Target>
                              </ui:SendHotkey.Target>
                            </ui:SendHotkey>
                            <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Run Logic &quot;ClickAccount&quot; from MetaBot &quot;My MetaBots\Kenan Web\KenanWeb_CC.mbot&quot;" sap:VirtualizedContainerService.HintSize="371,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_6" UnSafe="False" WorkflowFileName="Library\Kenan Web\KenanWeb_CC\ClickAccount.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InArgument x:TypeArguments="x:String" x:Key="vAccountNo">[vAccNo]</InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <Assign sap2010:Annotation.AnnotationText="Variable Operation: [$vTaskname$]: MSISDN still active in previous account To $vMessage$" sap:VirtualizedContainerService.HintSize="371,60" sap2010:WorkflowViewState.IdRef="Assign_13">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[vMessage]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">["["+vTaskname+"]: MSISDN still active in previous account"]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <Throw DisplayName="Throw StopWorkflow" Exception="[New NotImplementedException(&quot;StopWorkflow&quot;)]" sap:VirtualizedContainerService.HintSize="371,22" sap2010:WorkflowViewState.IdRef="Throw_2" />
                          </Sequence>
                        </If.Then>
                        <If.Else>
                          <Sequence sap:VirtualizedContainerService.HintSize="526,1330" sap2010:WorkflowViewState.IdRef="Sequence_7">
                            <Sequence.Variables>
                              <Variable x:TypeArguments="s:DateTime" Name="vSICreationDateDT" />
                              <Variable x:TypeArguments="s:DateTime" Name="vSIDeactivationDateDT" />
                            </Sequence.Variables>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Run Logic &quot;GetServiceTableDetails&quot; from MetaBot &quot;My MetaBots\Kenan Web\KenanWeb_CCService.mbot&quot;" sap:VirtualizedContainerService.HintSize="484,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_7" UnSafe="False" WorkflowFileName="Library\Kenan Web\KenanWeb_CCService\GetServiceTableDetails.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InArgument x:TypeArguments="x:String" x:Key="vIdentifier">["SI Creation Date:"]</InArgument>
                                <OutArgument x:TypeArguments="x:String" x:Key="vValue">[vSICreationDateStr]</OutArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Run Logic &quot;GetServiceTableDetails&quot; from MetaBot &quot;My MetaBots\Kenan Web\KenanWeb_CCService.mbot&quot;" sap:VirtualizedContainerService.HintSize="484,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_8" UnSafe="False" WorkflowFileName="Library\Kenan Web\KenanWeb_CCService\GetServiceTableDetails.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InArgument x:TypeArguments="x:String" x:Key="vIdentifier">["SI Deactivation Date:"]</InArgument>
                                <OutArgument x:TypeArguments="x:String" x:Key="vValue">[vSIDeactivationDateStr]</OutArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:InvokeWorkflowFile>
                            <Assign sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_27">
                              <Assign.To>
                                <OutArgument x:TypeArguments="s:DateTime">[vSICreationDateDT]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="s:DateTime">[Convert.ToDateTime(vSICreationDateStr)]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <Assign sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_28">
                              <Assign.To>
                                <OutArgument x:TypeArguments="s:DateTime">[vSIDeactivationDateDT]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="s:DateTime">[Convert.ToDateTime(vSIDeactivationDateStr)]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <Assign sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_29">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:TimeSpan">[vDiffDays]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:TimeSpan">[vSIDeactivationDateDT - vSICreationDateDT]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="484,61" sap2010:WorkflowViewState.IdRef="WriteLine_1" Text="[&quot;For MC K15 Check difference of deact and act date: &quot; + vDiffDays.TotalDays.ToString]" />
                            <If sap2010:Annotation.AnnotationText="If $vDiffDays$ Less Than(&lt;) &quot;90&quot; Then  " Condition="[vDiffDays.TotalDays &lt; 90]" sap:VirtualizedContainerService.HintSize="484,300" sap2010:WorkflowViewState.IdRef="If_2">
                              <If.Then>
                                <Sequence sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_6">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <Assign sap2010:Annotation.AnnotationText="Variable Operation: [$vTaskname$]: 3 months tenure not met for TOS To $vMessage$" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_14">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[vMessage]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">["["+vTaskname+"]: 3 months tenure not met for TOS"]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                </Sequence>
                              </If.Then>
                            </If>
                            <ui:SendHotkey DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" Activate="True" sap2010:Annotation.AnnotationText="Keystrokes: [CTRL DOWN]w[CTRL UP] in &quot;Kenan Admin Application -*&quot;" ClickBeforeTyping="False" EmptyField="False" sap:VirtualizedContainerService.HintSize="484,116" sap2010:WorkflowViewState.IdRef="SendHotkey_3" Key="w" KeyModifiers="Ctrl" SendWindowMessages="False" SpecialKey="False">
                              <ui:SendHotkey.Target>
                                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="&lt;wnd app='*' title='Kenan Admin Application -*' /&gt;" WaitForReady="INTERACTIVE">
                                  <ui:Target.TimeoutMS>
                                    <InArgument x:TypeArguments="x:Int32" />
                                  </ui:Target.TimeoutMS>
                                </ui:Target>
                              </ui:SendHotkey.Target>
                            </ui:SendHotkey>
                            <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Run Logic &quot;ClickAccount&quot; from MetaBot &quot;My MetaBots\Kenan Web\KenanWeb_CC.mbot&quot;" sap:VirtualizedContainerService.HintSize="484,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_10" UnSafe="False" WorkflowFileName="Library\Kenan Web\KenanWeb_CC\ClickAccount.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InArgument x:TypeArguments="x:String" x:Key="vAccountNo">[vAccNo]</InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                          </Sequence>
                        </If.Else>
                      </If>
                    </Sequence>
                  </If.Then>
                  <If.Else>
                    <Sequence sap:VirtualizedContainerService.HintSize="304,314" sap2010:WorkflowViewState.IdRef="Sequence_9">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Assign sap2010:Annotation.AnnotationText="Variable Operation: true To $vHasSystemError$" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_15">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[vHasSystemError]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">true</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign sap2010:Annotation.AnnotationText="Variable Operation: [$vTaskname$]: Unable to navigate to services page To $vSystemMessage$" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_16">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[vSystemMessage]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">["["+vTaskname+"]: Unable to navigate to services page"]</InArgument>
                        </Assign.Value>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </Assign>
                      <Throw DisplayName="Throw StopWorkflow" Exception="[New NotImplementedException(&quot;StopWorkflow&quot;)]" sap:VirtualizedContainerService.HintSize="262,22" sap2010:WorkflowViewState.IdRef="Throw_1" />
                    </Sequence>
                  </If.Else>
                </If>
                <ui:Comment sap:VirtualizedContainerService.HintSize="1375,55" sap2010:WorkflowViewState.IdRef="Comment_11" Text="----------------------&#xA;Finalize" />
                <ui:Replace sap2010:Annotation.AnnotationText="String Operation: Replace &quot;^\s+|\s+$&quot; with &quot;&quot; in &quot;$vMessage$&quot; and assign output to $vMessage$ " sap:VirtualizedContainerService.HintSize="1375,59" sap2010:WorkflowViewState.IdRef="Replace_1" Input="[vMessage]" IsBuilderTabModified="False" Pattern="^\s+|\s+$" RegexOption="IgnoreCase, Compiled" Result="[vMessage]">
                  <ui:Replace.Replacement>
                    <InArgument x:TypeArguments="x:String">
                      <Literal x:TypeArguments="x:String" Value="" />
                    </InArgument>
                  </ui:Replace.Replacement>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:Replace>
                <If sap2010:Annotation.AnnotationText="If $vMessage$ Equal To (=) &quot;&quot; Then  " Condition="[vMessage = &quot;&quot;]" sap:VirtualizedContainerService.HintSize="1375,400" sap2010:WorkflowViewState.IdRef="If_5">
                  <If.Then>
                    <Sequence sap:VirtualizedContainerService.HintSize="304,252" sap2010:WorkflowViewState.IdRef="Sequence_10">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Assign sap2010:Annotation.AnnotationText="Variable Operation: false To $vHasError$" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_17">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[vHasError]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">false</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign sap2010:Annotation.AnnotationText="Variable Operation: true To $vCanProceed$" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_18">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[vCanProceed]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">true</InArgument>
                        </Assign.Value>
                      </Assign>
                    </Sequence>
                  </If.Then>
                  <If.Else>
                    <Sequence sap:VirtualizedContainerService.HintSize="304,252" sap2010:WorkflowViewState.IdRef="Sequence_11">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Assign sap2010:Annotation.AnnotationText="Variable Operation: true To $vHasError$" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_19">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[vHasError]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">true</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign sap2010:Annotation.AnnotationText="Variable Operation: true To $vCanProceed$" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_20">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[vCanProceed]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">true</InArgument>
                        </Assign.Value>
                      </Assign>
                    </Sequence>
                  </If.Else>
                </If>
              </Sequence>
            </TryCatch.Try>
            <TryCatch.Catches>
              <Catch x:TypeArguments="s:NotImplementedException" sap:VirtualizedContainerService.HintSize="1429,104" sap2010:WorkflowViewState.IdRef="Catch`1_3">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ActivityAction x:TypeArguments="s:NotImplementedException">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="s:NotImplementedException" Name="exception" />
                  </ActivityAction.Argument>
                  <Rethrow sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Rethrow_1" />
                </ActivityAction>
              </Catch>
              <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="1429,560" sap2010:WorkflowViewState.IdRef="Catch`1_2">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ActivityAction x:TypeArguments="s:Exception">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                  </ActivityAction.Argument>
                  <Sequence sap:VirtualizedContainerService.HintSize="376,491" sap2010:WorkflowViewState.IdRef="Sequence_14">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_21">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[vHasSystemError]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">true</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign sap:VirtualizedContainerService.HintSize="334,62" sap2010:WorkflowViewState.IdRef="Assign_22">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[processStatus]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">Failed</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign sap2010:Annotation.AnnotationText="Variable Operation: $vTaskname$ ($Error Line Number$): $Error Description$ To $vSystemMessage$" sap:VirtualizedContainerService.HintSize="334,62" sap2010:WorkflowViewState.IdRef="Assign_24">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[vSystemMessage]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[vTaskname+": "+exception.Message]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:LogMessage sap:VirtualizedContainerService.HintSize="334,94.6666666666667" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[vTaskname + &quot; - Process Status: Failed. Exception: &quot;+exception.Message]" />
                  </Sequence>
                </ActivityAction>
              </Catch>
            </TryCatch.Catches>
          </TryCatch>
        </Sequence>
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="s:NotImplementedException" sap:VirtualizedContainerService.HintSize="1509,124" sap2010:WorkflowViewState.IdRef="Catch`1_4">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ActivityAction x:TypeArguments="s:NotImplementedException">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:NotImplementedException" Name="exception" />
            </ActivityAction.Argument>
            <ui:Comment sap:VirtualizedContainerService.HintSize="334,55" sap2010:WorkflowViewState.IdRef="Comment_14" Text="// Stop Workflow" />
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
    </TryCatch>
  </Sequence>
</Activity>