<Activity mc:Ignorable="sap sap2010" x:Class="ModularCheck_I7" this:ModularCheck_I7.vXMLFilePath="[&quot;&quot;]" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:ss="clr-namespace:System.Security;assembly=mscorlib" xmlns:sxl="clr-namespace:System.Xml.Linq;assembly=System.Xml.Linq" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_ConfigXLS" Type="InArgument(scg:Dictionary(x:String, x:String))" />
    <x:Property Name="vPlaceholder" Type="InOutArgument(x:String)" />
    <x:Property Name="vHasError" Type="OutArgument(x:String)" />
    <x:Property Name="vCanProceed" Type="OutArgument(x:String)" />
    <x:Property Name="vMessage" Type="OutArgument(x:String)" />
    <x:Property Name="vXMLFilePath" Type="InArgument(x:String)" />
    <x:Property Name="vSystemMessage" Type="OutArgument(x:String)" />
    <x:Property Name="vHasSystemError" Type="OutArgument(x:String)" />
    <x:Property Name="vMaxisCredDic" Type="InArgument(scg:Dictionary(x:String, scg:Dictionary(x:String, ss:SecureString)))" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1224,9114</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="37">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Database.Activities</x:String>
      <x:String>UiPath.Database</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.CSV</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>UiPath.CSV.Activities</x:String>
      <x:String>UiPath.Mail.Activities</x:String>
      <x:String>UiPath.Mail.Exchange.Activities</x:String>
      <x:String>UiPath.Mail.IMAP.Activities</x:String>
      <x:String>UiPath.Mail.Outlook.Activities</x:String>
      <x:String>UiPath.Mail.POP3.Activities</x:String>
      <x:String>UiPath.Mail.SMTP.Activities</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>UiPath.Orchestrator.Client</x:String>
      <x:String>UiPath.Orchestrator.Client.Models</x:String>
      <x:String>UiPath.Web.Activities</x:String>
      <x:String>UiPath.JSON.Activities</x:String>
      <x:String>UiPath.REST.Activities</x:String>
      <x:String>UiPath.SOAP.Activities</x:String>
      <x:String>UiPath.XML.Activities</x:String>
      <x:String>UiPath.Web</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.IO</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="54">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>system</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Plugin.Workflow</AssemblyReference>
      <AssemblyReference>UiPath.Database.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Database</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OrchestratorClient</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Web.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Web</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <sap:WorkflowViewStateService.ViewState>
    <scg:Dictionary x:TypeArguments="x:String, x:Object">
      <x:Boolean x:Key="ShouldExpandAll">True</x:Boolean>
    </scg:Dictionary>
  </sap:WorkflowViewStateService.ViewState>
  <Sequence sap:VirtualizedContainerService.HintSize="1204,9054" sap2010:WorkflowViewState.IdRef="Sequence_26">
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="1162,8962" sap2010:WorkflowViewState.IdRef="TryCatch_4">
      <TryCatch.Try>
        <Sequence sap:VirtualizedContainerService.HintSize="1124,8314" sap2010:WorkflowViewState.IdRef="Sequence_25">
          <Sequence.Variables>
            <Variable x:TypeArguments="x:String" Default="[&quot;&quot;]" Name="vMSISDN" />
            <Variable x:TypeArguments="x:String" Default="[&quot;&quot;]" Name="vTaskname" />
            <Variable x:TypeArguments="x:String" Default="[&quot;&quot;]" Name="vPlaceholder" />
            <Variable x:TypeArguments="x:String" Default="[&quot;&quot;]" Name="vPageTitle" />
            <Variable x:TypeArguments="x:String" Default="[&quot;&quot;]" Name="vAccNo" />
            <Variable x:TypeArguments="x:String" Default="[&quot;&quot;]" Name="vSimRepCSVFilePath" />
            <Variable x:TypeArguments="x:String" Default="[&quot;&quot;]" Name="vHasResults" />
            <Variable x:TypeArguments="x:String" Default="[&quot;&quot;]" Name="vSimRepXLSFilePath" />
            <Variable x:TypeArguments="x:String" Default="[&quot;&quot;]" Name="vSimRepFilePath" />
            <Variable x:TypeArguments="ui:Image" Name="screenshotImage" />
            <Variable x:TypeArguments="x:String" Name="processStatus" />
            <Variable x:TypeArguments="x:String" Default="[&quot;&quot;]" Name="CurrentTaskName" />
          </Sequence.Variables>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Assign sap:VirtualizedContainerService.HintSize="1082,60" sap2010:WorkflowViewState.IdRef="Assign_30">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[vSimRepFilePath]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[in_ConfigXLS("vSimRepFilePath")]</InArgument>
            </Assign.Value>
          </Assign>
          <ui:Comment sap:VirtualizedContainerService.HintSize="1082,55" sap2010:WorkflowViewState.IdRef="Comment_2" Text="----------------------&#xA;Initialise variables" />
          <If sap2010:Annotation.AnnotationText="If $vPlaceholder$ Not Equal To (&lt;&gt;) &quot;&quot; Then  " Condition="[vPlaceholder &lt;&gt; &quot;&quot;]" sap:VirtualizedContainerService.HintSize="1082,262" sap2010:WorkflowViewState.IdRef="If_1">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If.Then>
              <Sequence sap:VirtualizedContainerService.HintSize="242,114" sap2010:WorkflowViewState.IdRef="Sequence_1">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Throw DisplayName="Throw StopWorkflow" Exception="[New NotImplementedException(&quot;StopWorkflow&quot;)]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Throw_1" />
              </Sequence>
            </If.Then>
          </If>
          <Assign sap:VirtualizedContainerService.HintSize="1082,60" sap2010:WorkflowViewState.IdRef="Assign_31">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[vTaskname]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">["ModularCheck_I7"]</InArgument>
            </Assign.Value>
          </Assign>
          <Assign sap2010:Annotation.AnnotationText="Variable Operation: false To $vHasSystemError$" sap:VirtualizedContainerService.HintSize="1082,60" sap2010:WorkflowViewState.IdRef="Assign_1">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[vHasSystemError]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">false</InArgument>
            </Assign.Value>
          </Assign>
          <Assign sap2010:Annotation.AnnotationText="Variable Operation:  To $vSystemMessage$" sap:VirtualizedContainerService.HintSize="1082,60" sap2010:WorkflowViewState.IdRef="Assign_2">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[vSystemMessage]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">
                <Literal x:TypeArguments="x:String" Value="" />
              </InArgument>
            </Assign.Value>
          </Assign>
          <Assign sap2010:Annotation.AnnotationText="Variable Operation: false To $vHasError$" sap:VirtualizedContainerService.HintSize="1082,60" sap2010:WorkflowViewState.IdRef="Assign_3">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[vHasError]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">false</InArgument>
            </Assign.Value>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </Assign>
          <Assign sap2010:Annotation.AnnotationText="Variable Operation:  To $vMessage$" sap:VirtualizedContainerService.HintSize="1082,60" sap2010:WorkflowViewState.IdRef="Assign_4">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[vMessage]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">
                <Literal x:TypeArguments="x:String" Value="" />
              </InArgument>
            </Assign.Value>
          </Assign>
          <Assign sap2010:Annotation.AnnotationText="Variable Operation: true To $vCanProceed$" sap:VirtualizedContainerService.HintSize="1082,60" sap2010:WorkflowViewState.IdRef="Assign_5">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[vCanProceed]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">true</InArgument>
            </Assign.Value>
          </Assign>
          <TryCatch sap2010:Annotation.AnnotationText="Begin Error Handling; Action: Continue; Options: Variable Assignment,  Task Status: Pass" sap:VirtualizedContainerService.HintSize="1082,7125" sap2010:WorkflowViewState.IdRef="TryCatch_3">
            <TryCatch.Try>
              <Sequence sap:VirtualizedContainerService.HintSize="1044,6158" sap2010:WorkflowViewState.IdRef="Sequence_21">
                <Sequence.Variables>
                  <Variable x:TypeArguments="scg:Dictionary(x:String, x:String)" Default="[New Dictionary(Of String, String)]" Name="XMLSessionFileName" />
                  <Variable x:TypeArguments="x:String" Name="XMLFileContent" />
                  <Variable x:TypeArguments="sxl:XDocument" Name="XMLDocumentVar" />
                  <Variable x:TypeArguments="scg:Dictionary(x:String, sxl:XDocument)" Default="[New Dictionary(Of String, XDocument)]" Name="XMLSessionXDocument" />
                  <Variable x:TypeArguments="x:Object" Name="XMLNodeContent" />
                  <Variable x:TypeArguments="ui:Image" Name="screenshotImage" />
                  <Variable x:TypeArguments="x:String" Name="processStatus" />
                  <Variable x:TypeArguments="x:Boolean" Name="vPopupWindow" />
                </Sequence.Variables>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:Comment sap:VirtualizedContainerService.HintSize="1002,55" sap2010:WorkflowViewState.IdRef="Comment_4" Text="----------------------&#xA;Get MSISDN and account number" />
                <Assign sap2010:Annotation.AnnotationText="XML : Start XML Session using existing file &quot;$vXMLFilePath$&quot; Session:Default" sap:VirtualizedContainerService.HintSize="1002,60" sap2010:WorkflowViewState.IdRef="Assign_6">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[XMLSessionFileName("Default")]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[vXMLFilePath]</InArgument>
                  </Assign.Value>
                </Assign>
                <ui:ReadTextFile sap2010:Annotation.AnnotationText="XML : Start XML Session using existing file &quot;$vXMLFilePath$&quot; Session:Default" Content="[XMLFileContent]" FileName="[vXMLFilePath]" sap:VirtualizedContainerService.HintSize="1002,132" sap2010:WorkflowViewState.IdRef="ReadTextFile_1" />
                <ui:DeserializeXml sap2010:Annotation.AnnotationText="XML : Start XML Session using existing file &quot;$vXMLFilePath$&quot; Session:Default" sap:VirtualizedContainerService.HintSize="1002,60" sap2010:WorkflowViewState.IdRef="DeserializeXml_1" XMLDocument="[XMLDocumentVar]" XMLString="[XMLFileContent]" />
                <Assign sap2010:Annotation.AnnotationText="XML : Start XML Session using existing file &quot;$vXMLFilePath$&quot; Session:Default" sap:VirtualizedContainerService.HintSize="1002,60" sap2010:WorkflowViewState.IdRef="Assign_7">
                  <Assign.To>
                    <OutArgument x:TypeArguments="sxl:XDocument">[XMLSessionXDocument("Default")]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="sxl:XDocument">[XMLDocumentVar]</InArgument>
                  </Assign.Value>
                </Assign>
                <ui:ExecuteXPath XMLString="{x:Null}" sap2010:Annotation.AnnotationText="XML : Get Single Node value from XPath location &quot;/info/MSISDN&quot; and assign to variable &quot;$vMSISDN$&quot;. Session:Default" ExistingXML="[XMLSessionXDocument(&quot;Default&quot;)]" sap:VirtualizedContainerService.HintSize="1002,89" sap2010:WorkflowViewState.IdRef="ExecuteXPath_1" Result="[XMLNodeContent]" XPathExpression="string(/info/MSISDN/text())" />
                <Assign sap2010:Annotation.AnnotationText="XML : Get Single Node value from XPath location &quot;/info/MSISDN&quot; and assign to variable &quot;$vMSISDN$&quot;. Session:Default" sap:VirtualizedContainerService.HintSize="1002,60" sap2010:WorkflowViewState.IdRef="Assign_8">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[vMSISDN]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[XMLNodeContent.ToString()]</InArgument>
                  </Assign.Value>
                </Assign>
                <ui:ExecuteXPath XMLString="{x:Null}" sap2010:Annotation.AnnotationText="XML : Get Single Node value from XPath location &quot;/info/AccNo&quot; and assign to variable &quot;$vAccNo$&quot;. Session:Default" ExistingXML="[XMLSessionXDocument(&quot;Default&quot;)]" sap:VirtualizedContainerService.HintSize="1002,89" sap2010:WorkflowViewState.IdRef="ExecuteXPath_2" Result="[XMLNodeContent]" XPathExpression="string(/info/AccNo/text())" />
                <Assign sap2010:Annotation.AnnotationText="XML : Get Single Node value from XPath location &quot;/info/AccNo&quot; and assign to variable &quot;$vAccNo$&quot;. Session:Default" sap:VirtualizedContainerService.HintSize="1002,60" sap2010:WorkflowViewState.IdRef="Assign_9">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[vAccNo]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[XMLNodeContent.ToString()]</InArgument>
                  </Assign.Value>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </Assign>
                <ui:Comment sap:VirtualizedContainerService.HintSize="1002,55" sap2010:WorkflowViewState.IdRef="Comment_5" Text="----------------------&#xA;Search MSISDN in iSell Mobility Home Page" />
                <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Run Logic &quot;SearchIdentifier&quot; from MetaBot &quot;My MetaBots\iSell Mobility\iSell_Mobility_HomePage.mbot&quot;" sap:VirtualizedContainerService.HintSize="1002,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="Library\iSell Mobility\iSell_Mobility_HomePage\SearchIdentifier.xaml">
                  <ui:InvokeWorkflowFile.Arguments>
                    <InArgument x:TypeArguments="x:String" x:Key="vIdentifier">["MSISDN"]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="vMSISDN">[vMSISDN]</InArgument>
                  </ui:InvokeWorkflowFile.Arguments>
                </ui:InvokeWorkflowFile>
                <TryCatch sap2010:Annotation.AnnotationText="Begin Error Handling; Action: Continue; Options: Variable Assignment,  Task Status: Pass" sap:VirtualizedContainerService.HintSize="1002,1208" sap2010:WorkflowViewState.IdRef="TryCatch_1">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <TryCatch.Try>
                    <Sequence sap:VirtualizedContainerService.HintSize="421,179" sap2010:WorkflowViewState.IdRef="Sequence_2">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Run Logic &quot;GetPageHeader&quot; from MetaBot &quot;My MetaBots\iSell Mobility\iSell_Mobility_HomePage.mbot&quot;" sap:VirtualizedContainerService.HintSize="379,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_3" UnSafe="False" WorkflowFileName="Library\iSell Mobility\iSell_Mobility_HomePage\GetPageHeader.xaml">
                        <ui:InvokeWorkflowFile.Arguments>
                          <OutArgument x:TypeArguments="x:String" x:Key="vPageHeader" />
                        </ui:InvokeWorkflowFile.Arguments>
                      </ui:InvokeWorkflowFile>
                    </Sequence>
                  </TryCatch.Try>
                  <TryCatch.Catches>
                    <Catch x:TypeArguments="s:NotImplementedException" sap:VirtualizedContainerService.HintSize="425,104" sap2010:WorkflowViewState.IdRef="Catch`1_6">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ActivityAction x:TypeArguments="s:NotImplementedException">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="s:NotImplementedException" Name="exception" />
                        </ActivityAction.Argument>
                        <Rethrow sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Rethrow_2" />
                      </ActivityAction>
                    </Catch>
                    <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="425,614" sap2010:WorkflowViewState.IdRef="Catch`1_1">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ActivityAction x:TypeArguments="s:Exception">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                        </ActivityAction.Argument>
                        <Sequence sap:VirtualizedContainerService.HintSize="376,545" sap2010:WorkflowViewState.IdRef="Sequence_4">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_10">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[vHasSystemError]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">true</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_11">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[processStatus]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">Failed</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign sap2010:Annotation.AnnotationText="Variable Operation: [$vTaskname$]: Unable to navigate to iSell customer page To $vSystemMessage$" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_34">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[vSystemMessage]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">["["+vTaskname+"]: Unable to navigate to iSell customer page"]</InArgument>
                            </Assign.Value>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </Assign>
                          <Throw DisplayName="Throw StopWorkflow" Exception="[New NotImplementedException(&quot;StopWorkflow&quot;)]" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="Throw_5" />
                          <ui:LogMessage sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;Process Status: Failed. Exception: &quot;+exception.Message]" />
                        </Sequence>
                      </ActivityAction>
                    </Catch>
                  </TryCatch.Catches>
                </TryCatch>
                <ui:Comment sap:VirtualizedContainerService.HintSize="1002,55" sap2010:WorkflowViewState.IdRef="Comment_9" Text="----------------------&#xA;Navigate to Sim Replacement Page" />
                <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Run Logic &quot;NavigatetoPage&quot; from MetaBot &quot;My MetaBots\iSell Mobility\iSell_Mobility_HomePage.mbot&quot;" sap:VirtualizedContainerService.HintSize="1002,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_4" UnSafe="False" WorkflowFileName="Library\iSell Mobility\iSell_Mobility_HomePage\NavigatetoMobilityServices.xaml">
                  <ui:InvokeWorkflowFile.Arguments>
                    <InArgument x:TypeArguments="x:String" x:Key="vText">["MOBILITY SERVICES"]</InArgument>
                  </ui:InvokeWorkflowFile.Arguments>
                </ui:InvokeWorkflowFile>
                <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Run Logic &quot;ClickSimReplacement&quot; from MetaBot &quot;My MetaBots\iSell Mobility\iSell_Mobility_HomePage.mbot&quot;" sap:VirtualizedContainerService.HintSize="1002,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_5" UnSafe="False" WorkflowFileName="Library\iSell Mobility\iSell_Mobility_General\CloseOfferPopup.xaml">
                  <ui:InvokeWorkflowFile.Arguments>
                    <scg:Dictionary x:TypeArguments="x:String, Argument" />
                  </ui:InvokeWorkflowFile.Arguments>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:InvokeWorkflowFile>
                <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Run Logic &quot;ClickSimReplacement&quot; from MetaBot &quot;My MetaBots\iSell Mobility\iSell_Mobility_HomePage.mbot&quot;" DisplayName="Invoke Workflow File" sap:VirtualizedContainerService.HintSize="1002,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_12" UnSafe="False" WorkflowFileName="Library\iSell Mobility\iSell_Mobility_HomePage\ClickSimReplacement.xaml">
                  <ui:InvokeWorkflowFile.Arguments>
                    <scg:Dictionary x:TypeArguments="x:String, Argument" />
                  </ui:InvokeWorkflowFile.Arguments>
                </ui:InvokeWorkflowFile>
                <ui:Comment sap:VirtualizedContainerService.HintSize="1002,74" sap2010:WorkflowViewState.IdRef="Comment_10" Text="----------------------&#xA;Get cell index for first instance of account number" />
                <Delay Duration="00:00:05" sap:VirtualizedContainerService.HintSize="1002,22" sap2010:WorkflowViewState.IdRef="Delay_1" />
                <TryCatch sap2010:Annotation.AnnotationText="Begin Error Handling; Action: Continue; Options: Variable Assignment,  Task Status: Pass" sap:VirtualizedContainerService.HintSize="1002,1194" sap2010:WorkflowViewState.IdRef="TryCatch_2">
                  <TryCatch.Try>
                    <Sequence sap:VirtualizedContainerService.HintSize="421,432" sap2010:WorkflowViewState.IdRef="Sequence_6">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:Comment DisplayName="Not Migrated" sap:VirtualizedContainerService.HintSize="379,112" sap2010:WorkflowViewState.IdRef="Comment_11" Text="_TODO:_ Object Cloning: Get Property 'HTML InnerText' of Pane &quot;&quot; from window 'Maxis - Isell - *'; Assign to variable &quot;$vPageTitle$&quot;; Source: Window; Play Type:Object" />
                      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Run Logic &quot;GetPageHeader&quot; from MetaBot &quot;My MetaBots\iSell Mobility\iSell_Mobility_HomePage.mbot&quot;" DisplayName="Invoke Workflow File" sap:VirtualizedContainerService.HintSize="379,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_10" UnSafe="False" WorkflowFileName="Library\iSell Mobility\iSell_Mobility_SimReplacementPage\GetSimReplacementHeader.xaml">
                        <ui:InvokeWorkflowFile.Arguments>
                          <OutArgument x:TypeArguments="x:String" x:Key="vPageTitle">[vPageTitle]</OutArgument>
                        </ui:InvokeWorkflowFile.Arguments>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:InvokeWorkflowFile>
                      <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="379,61" sap2010:WorkflowViewState.IdRef="WriteLine_2" Text="[&quot;MC I7 Check Page Header: &quot; + vPageTitle]" />
                    </Sequence>
                  </TryCatch.Try>
                  <TryCatch.Catches>
                    <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="425,452" sap2010:WorkflowViewState.IdRef="Catch`1_2">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ActivityAction x:TypeArguments="s:Exception">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                        </ActivityAction.Argument>
                        <Sequence sap:VirtualizedContainerService.HintSize="376,383" sap2010:WorkflowViewState.IdRef="Sequence_8">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_13">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[vHasSystemError]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">true</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_14">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[processStatus]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">Failed</InArgument>
                            </Assign.Value>
                          </Assign>
                          <ui:LogMessage sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[&quot;Process Status: Failed. Exception: &quot;+exception.Message]" />
                        </Sequence>
                      </ActivityAction>
                    </Catch>
                  </TryCatch.Catches>
                </TryCatch>
                <If sap2010:Annotation.AnnotationText="If $vHasSystemError$ Equal To (=) &quot;true&quot; OR $vPageTitle$ Not Equal To(&lt;&gt;) &quot;SIM Replacement&quot; Then" Condition="[vHasSystemError = &quot;true&quot; or vPageTitle &lt;&gt; &quot;SIM Replacement&quot;]" sap:VirtualizedContainerService.HintSize="1002,829" sap2010:WorkflowViewState.IdRef="If_10">
                  <If.Then>
                    <Sequence sap:VirtualizedContainerService.HintSize="304,314" sap2010:WorkflowViewState.IdRef="Sequence_9">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Assign sap2010:Annotation.AnnotationText="Variable Operation: true To $vHasSystemError$" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_15">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[vHasSystemError]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">true</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign sap2010:Annotation.AnnotationText="Variable Operation: [$vTaskname$]: Unable to navigate to iSell Sim Replacement page To $vSystemMessage$" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_16">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[vSystemMessage]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">["["+vTaskname+"]: Unable to navigate to iSell Sim Replacement page"]</InArgument>
                        </Assign.Value>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </Assign>
                      <Throw DisplayName="Throw StopWorkflow" Exception="[New NotImplementedException(&quot;StopWorkflow&quot;)]" sap:VirtualizedContainerService.HintSize="262,22" sap2010:WorkflowViewState.IdRef="Throw_3" />
                    </Sequence>
                  </If.Then>
                  <If.Else>
                    <Sequence sap:VirtualizedContainerService.HintSize="653,681" sap2010:WorkflowViewState.IdRef="Sequence_30">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="x:String" Name="vSimSerialNo">
                          <Variable.Default>
                            <Literal x:TypeArguments="x:String" Value="" />
                          </Variable.Default>
                        </Variable>
                        <Variable x:TypeArguments="x:String" Name="vNoOfMISMS">
                          <Variable.Default>
                            <Literal x:TypeArguments="x:String" Value="" />
                          </Variable.Default>
                        </Variable>
                        <Variable x:TypeArguments="x:Boolean" Name="vHasSystemErrorBool" />
                      </Sequence.Variables>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File" sap:VirtualizedContainerService.HintSize="611,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_11" UnSafe="False" WorkflowFileName="Library\iSell Mobility\iSell_Mobility_SimReplacementPage\MISMSCheck.xaml">
                        <ui:InvokeWorkflowFile.Arguments>
                          <OutArgument x:TypeArguments="x:Boolean" x:Key="vHasSystemErrorBool">[vHasSystemErrorBool]</OutArgument>
                          <OutArgument x:TypeArguments="x:String" x:Key="vSimSerialNo">[vSimSerialNo]</OutArgument>
                          <OutArgument x:TypeArguments="x:String" x:Key="vNoOfMISMS">[vNoOfMISMS]</OutArgument>
                        </ui:InvokeWorkflowFile.Arguments>
                      </ui:InvokeWorkflowFile>
                      <If sap2010:Annotation.AnnotationText="If $vSystemMessage$ Includes &quot;Error&quot; Then  " Condition="[vHasSystemErrorBool]" sap:VirtualizedContainerService.HintSize="611,462" sap2010:WorkflowViewState.IdRef="If_12">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <If.Then>
                          <Sequence sap:VirtualizedContainerService.HintSize="304,314" sap2010:WorkflowViewState.IdRef="Sequence_29">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <Assign sap2010:Annotation.AnnotationText="Variable Operation: true To $vHasSystemError$" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_39">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[vHasSystemError]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">true</InArgument>
                              </Assign.Value>
                            </Assign>
                            <Assign sap2010:Annotation.AnnotationText="Variable Operation: [$vTaskname$]: $vSystemMessage$ To $vSystemMessage$" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_40">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[vSystemMessage]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">["["+vTaskname+"]: "+vSystemMessage]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <Throw DisplayName="Throw StopWorkflow" Exception="[New NotImplementedException(&quot;StopWorkflow&quot;)]" sap:VirtualizedContainerService.HintSize="262,22" sap2010:WorkflowViewState.IdRef="Throw_6" />
                          </Sequence>
                        </If.Then>
                        <If.Else>
                          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_41">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[vMessage]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String" xml:space="preserve">[vMessage+Environment.NewLine+"	["+vTaskname+"]: MISM-P: "+vSimSerialNo+" in this account has "+vNoOfMISMS+" MISM-S"]</InArgument>
                            </Assign.Value>
                          </Assign>
                        </If.Else>
                      </If>
                    </Sequence>
                  </If.Else>
                </If>
                <ui:Comment sap:VirtualizedContainerService.HintSize="1002,55" sap2010:WorkflowViewState.IdRef="Comment_17" Text="----------------------&#xA;Return to home page of iSell Mobility" />
                <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Run Logic &quot;NavigatetoPage&quot; from MetaBot &quot;My MetaBots\iSell Mobility\iSell_Mobility_HomePage.mbot&quot;" sap:VirtualizedContainerService.HintSize="1002,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_9" UnSafe="False" WorkflowFileName="Library\iSell Mobility\iSell_Mobility_HomePage\NavigatetoPage.xaml">
                  <ui:InvokeWorkflowFile.Arguments>
                    <InArgument x:TypeArguments="x:String" x:Key="vText">["SEARCH"]</InArgument>
                  </ui:InvokeWorkflowFile.Arguments>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:InvokeWorkflowFile>
                <ui:Comment sap:VirtualizedContainerService.HintSize="1002,55" sap2010:WorkflowViewState.IdRef="Comment_18" Text="----------------------&#xA;Finalize" />
                <ui:Replace sap2010:Annotation.AnnotationText="String Operation: Replace &quot;^\s+|\s+$&quot; with &quot;&quot; in &quot;$vMessage$&quot; and assign output to $vMessage$ " sap:VirtualizedContainerService.HintSize="1002,59" sap2010:WorkflowViewState.IdRef="Replace_3" Input="[vMessage]" IsBuilderTabModified="False" Pattern="^\s+|\s+$" RegexOption="IgnoreCase, Compiled" Result="[vMessage]">
                  <ui:Replace.Replacement>
                    <InArgument x:TypeArguments="x:String">
                      <Literal x:TypeArguments="x:String" Value="" />
                    </InArgument>
                  </ui:Replace.Replacement>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:Replace>
                <If sap2010:Annotation.AnnotationText="If $vMessage$ Equal To (=) &quot;&quot; Then  " Condition="[vMessage = &quot;&quot;]" sap:VirtualizedContainerService.HintSize="1002,400" sap2010:WorkflowViewState.IdRef="If_11">
                  <If.Then>
                    <Sequence sap:VirtualizedContainerService.HintSize="304,252" sap2010:WorkflowViewState.IdRef="Sequence_19">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Assign sap2010:Annotation.AnnotationText="Variable Operation: false To $vHasError$" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_23">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[vHasError]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">false</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign sap2010:Annotation.AnnotationText="Variable Operation: true To $vCanProceed$" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_24">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[vCanProceed]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">true</InArgument>
                        </Assign.Value>
                      </Assign>
                    </Sequence>
                  </If.Then>
                  <If.Else>
                    <Sequence sap:VirtualizedContainerService.HintSize="304,252" sap2010:WorkflowViewState.IdRef="Sequence_20">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Assign sap2010:Annotation.AnnotationText="Variable Operation: true To $vHasError$" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_25">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[vHasError]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">true</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign sap2010:Annotation.AnnotationText="Variable Operation: true To $vCanProceed$" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_26">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[vCanProceed]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">true</InArgument>
                        </Assign.Value>
                      </Assign>
                    </Sequence>
                  </If.Else>
                </If>
              </Sequence>
            </TryCatch.Try>
            <TryCatch.Catches>
              <Catch x:TypeArguments="s:NotImplementedException" sap:VirtualizedContainerService.HintSize="1048,104" sap2010:WorkflowViewState.IdRef="Catch`1_5">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ActivityAction x:TypeArguments="s:NotImplementedException">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="s:NotImplementedException" Name="exception" />
                  </ActivityAction.Argument>
                  <Rethrow sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Rethrow_1" />
                </ActivityAction>
              </Catch>
              <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="1048,552" sap2010:WorkflowViewState.IdRef="Catch`1_3">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ActivityAction x:TypeArguments="s:Exception">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                  </ActivityAction.Argument>
                  <Sequence sap:VirtualizedContainerService.HintSize="376,483" sap2010:WorkflowViewState.IdRef="Sequence_23">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_27">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[vHasSystemError]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">true</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_28">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[processStatus]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">Failed</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign sap2010:Annotation.AnnotationText="Variable Operation: $vTaskname$ ($Error Line Number$): $Error Description$ To $vSystemMessage$" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_35">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[vSystemMessage]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[vTaskname+": "+exception.Message]</InArgument>
                      </Assign.Value>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </Assign>
                    <ui:LogMessage sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Info" Message="[vTaskname + &quot; - Process Status: Failed. Exception: &quot;+exception.Message]" />
                  </Sequence>
                </ActivityAction>
              </Catch>
            </TryCatch.Catches>
          </TryCatch>
        </Sequence>
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="s:NotImplementedException" sap:VirtualizedContainerService.HintSize="1128,124" sap2010:WorkflowViewState.IdRef="Catch`1_4">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ActivityAction x:TypeArguments="s:NotImplementedException">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:NotImplementedException" Name="exception" />
            </ActivityAction.Argument>
            <ui:Comment sap:VirtualizedContainerService.HintSize="334,55" sap2010:WorkflowViewState.IdRef="Comment_21" Text="// Stop Workflow" />
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
      <TryCatch.Finally>
        <Sequence sap:VirtualizedContainerService.HintSize="421,274" sap2010:WorkflowViewState.IdRef="Sequence_31">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:Comment sap:VirtualizedContainerService.HintSize="379,55" sap2010:WorkflowViewState.IdRef="Comment_22" Text="----------------------&#xA;Return to home page" />
          <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Run Logic &quot;NavigatetoPage&quot; from MetaBot &quot;My MetaBots\iSell Mobility\iSell_Mobility_HomePage.mbot&quot;" DisplayName="Invoke Workflow File" sap:VirtualizedContainerService.HintSize="379,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_13" UnSafe="False" WorkflowFileName="Library\iSell Mobility\iSell_Mobility_HomePage\NavigatetoPage.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <InArgument x:TypeArguments="x:String" x:Key="vText">["SEARCH"]</InArgument>
            </ui:InvokeWorkflowFile.Arguments>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:InvokeWorkflowFile>
        </Sequence>
      </TryCatch.Finally>
    </TryCatch>
  </Sequence>
</Activity>